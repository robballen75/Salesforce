<apex:page standardController="qbdialer__DialerQuery__c"
    extensions="qbdialer.QueryBuilder"
    tabStyle="is_links__tab"
    title="Query Builder Edit: {!qbdialer__DialerQuery__c.Name}"
    action="{!checkQueryProfPerms}"
    id="QueryBuilder">
<script type="text/javascript"> __jQuery = null;if(typeof(jQuery) != "undefined") __jQuery = jQuery; jQuery = null; </script>
<script type="text/javascript" src="{!URLFOR($Resource.c2c_resources, '/lib/jquery.min.js')}"></script>
    <apex:outputPanel rendered="{!NOT(can_edit)}">
        <script type="text/javascript">
            window.location.href = '{!$Page.qbdialer__Query_Builder_List_View}';
        </script>
    </apex:outputPanel>
    <apex:outputText value="{!qbdialer__DialerQuery__c.qbdialer__OnlyDialOwn__c}" rendered="false" />
    <apex:outputText value="{!qbdialer__DialerQuery__c.qbdialer__LimitCallsTo__c}" rendered="false" />
    <div style="margin-bottom: 5px">
        <a href="/apex/is_links">InsideSales</a>
        <strong>&gt;</strong>
        <apex:outputPanel rendered="{!IsDominoQuery}">
        <a href="/apex/Query_Builder_List_View">Domino Lists</a>
        <strong>&gt;</strong>
        Domino List
        </apex:outputPanel>
        <apex:outputPanel rendered="{!IsSeekQuery}">
        <a href="/apex/Seek_Initiative_List_View">Seek Lists</a>
        <strong>&gt;</strong>
        Timeblock Query
        </apex:outputPanel>
    </div>
    <apex:dataList value="{!FieldTypes1}" var="ft" id="field_type_list1" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes2}" var="ft" id="field_type_list2" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes3}" var="ft" id="field_type_list3" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes4}" var="ft" id="field_type_list4" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes5}" var="ft" id="field_type_list5" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes6}" var="ft" id="field_type_list6" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes7}" var="ft" id="field_type_list7" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes8}" var="ft" id="field_type_list8" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes9}" var="ft" id="field_type_list9" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes10}" var="ft" id="field_type_list10" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes11}" var="ft" id="field_type_list11" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
    </apex:dataList>
    <apex:dataList value="{!FieldTypes12}" var="ft" id="field_type_list12" style="visibility:hidden;position:absolute;">
        <apex:outputPanel id="local_name">{!ft.local_name}</apex:outputPanel>
        <apex:outputPanel id="field_type">{!ft.field_type}</apex:outputPanel>
    </apex:dataList>
    <apex:outputPanel style="display:none" >
        <apex:outputText id="role_option_list" value="{!RoleOptions}"/>
    </apex:outputPanel>
    <apex:outputPanel style="display:none">
        Selected:  <apex:outputText id="selected_emails"  value="{!emailFolders}"/>
        Available: <apex:outputText id="available_emails" value="{!availableEmailFolders}"/>
    </apex:outputPanel>
    <style type="text/css">
    #savestatus_mirror {
        font-weight: bold;
        font-style: italic;
        display: none;
    }
    .report_select {
        min-width: 285px;
    }
    </style>
    <script type="text/javascript">
    qbjq = jQuery.noConflict();
    jQuery = __jQuery;
    var previousOnload = window.onload;
    window.onload = function() {
        if (previousOnload) {
            previousOnload();
            checkOnlyDialOwn();
        }
        onLoadCriteria();
        onLoadBooleanFilter();
        if(document.getElementById("{!$Component.QueryBuilder.editPage.query_name}").value == ''){
            //if this is an add, set default values
            validateDialerQueryDefaults();
        }
        getLocalPresenceData();
        initReportFolders();

        qbjq('#opportunity_type_select').hide();
        qbjq('#case_type_select').hide();
        if(document.getElementById("{!$Component.QueryBuilder.editPage}:object_type").value == 'Opportunity'){
            qbjq('#opportunity_type_select').show();
        } else if(document.getElementById("{!$Component.QueryBuilder.editPage}:object_type").value == 'Case') {
            qbjq('#case_type_select').show();
        }
    }

    function validateDialerQueryDefaults(){
        //Email Templates
        document.getElementById("{!$Component.QueryBuilder.editPage.use_salesforce_templates}:0").checked = true;
        toggleEmailFolders();

        //data source
        document.getElementById("{!$Component.QueryBuilder.editPage.data_source}:0").checked = true;

        //Filter by owner
        document.getElementById("{!$Component.QueryBuilder.editPage.ownership_filter}:0").checked = true;

        //visibility
        document.getElementById("{!$Component.QueryBuilder.editPage.fshare}:0").checked = true;

        //callbacks
        document.getElementById("{!$Component.QueryBuilder.editPage.call_backs}:0").checked = true;

        // Neural Sorting
        checkLicense('neur',
            function (data) {
                var smartSort = document.getElementById("QueryBuilder:editPage:neuralytics_sort");
                if (smartSort) {
                    smartSort.value = (data != null && data.message) ? "On" : "Off"
                }
            }
        );
    }

    function toggleCallingTimes(isChecked) {
        var start    = document.getElementById("{!$Component.QueryBuilder.editPage.call_start_time}");
        var end      = document.getElementById("{!$Component.QueryBuilder.editPage.call_end_time}");

        if (start && end) {
            start.disabled = ! isChecked;
            end.disabled   = ! isChecked;
        }
    }

    var type2ops = new Array();
    type2ops['Text']               = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['String']             = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['TextArea']           = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['MultiLineText']      = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['HtmlMultiLineText']  = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['Reference']          = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['Phone']              = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['Fax']                = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['Email']              = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['Url']                = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['Content']            = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['SfdcEncryptedText']  = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['EncryptedText']      = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['AutoNumber']         = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['CurrencyCode']       = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['StringPlusClob']     = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['HtmlStringPlusClob'] = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['InetAddress']        = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['AddressState']       = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['AddressCountry']     = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['Division']           = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['EnumOrId']           = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['StaticEnum']         = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['DynamicEnum']        = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['Picklist']           = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['MultiPicklist']      = ['e','n','u','x'];
    type2ops['TextEnum']           = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['BitVector']          = ['e','n','l','g','m','h','c','k','s','i'];
    type2ops['Currency']           = ['e','n','l','g','m','h'];
    type2ops['Integer']            = ['e','n','l','g','m','h'];
    type2ops['Double']             = ['e','n','l','g','m','h'];
    type2ops['Percent']            = ['e','n','l','g','m','h'];
    type2ops['DateTime']           = ['e','n','l','g','m','h'];
    type2ops['TimeOnly']           = ['e','n','l','g','m','h'];
    type2ops['DateOnly']           = ['e','n','l','g','m','h'];
    type2ops['Date']			   = ['e','n','l','g','m','h'];
    type2ops['Birthday']           = ['e','n','l','g','m','h'];
    type2ops['DueDate']            = ['e','n','l','g','m','h'];
    type2ops['MultiEnum']          = ['e','n','u','x'];
    type2ops['EntityId']           = ['e','n','s'];
    type2ops['Boolean']            = ['e','n'];
    type2ops['RecordType']         = ['e','n'];

    var val2type = new Array();
    function buildFieldTypeMap(filter_index){
        var l = document.getElementById('QueryBuilder:field_type_list'+filter_index);
        var items = l.childNodes;
        for (var i = 0; i < items.length; i++) {
            if (items[i].tagName.toLowerCase() == 'li') {
                var id = items[i].id;
                if (id) {
                    var local_name = document.getElementById(id+":local_name").innerHTML;
                    var field_type = document.getElementById(id+":field_type").innerHTML;
                    val2type[local_name] = field_type;
                }
            }
        }
    }

    function lp_blocks_response(response) {
        var selected_val = qbjq(".bucket_id").val();
        var first_item = false;
        if (response.lp_able) {
            qbjq('#local_presence_table').show();
            qbjq('#local_presence_block_select').html('');
            for (var i=0; i < response.blocks.length; i++) {
                if (qbjq(".bucket_id").val() == response.blocks[i].id) {
                    selected_val = response.blocks[i].id;
                    qbjq('.bucket_id').val(selected_val);
                }
                if (first_item === false) {
                    first_item = response.blocks[i].id;
                }
                qbjq('#local_presence_block_select').append(qbjq('<option value="'+response.blocks[i].id+'">'+response.blocks[i].label+'</option>'));
            }

            if (first_item !== false && !qbjq('.bucket_id').val()) {
                qbjq('.bucket_id').val(first_item)
            }
            qbjq('#local_presence_block_select').val(qbjq('.bucket_id').val());
        }
    }

    function getLocalPresenceData() {
        var script_element   = document.createElement('script');
        var user_oauth_token = '{!JSENCODE($User.is_token__c)}';
        var user_subdomain   = '{!JSENCODE($User.is_subdomain__c)}';
        script_element.type  = 'text/javascript';
        script_element.src   = 'https://'+user_subdomain+'.insidesales.com/admin/salesforce/local_presence_blocks?token='+user_oauth_token;
        document.body.appendChild(script_element);
    }

    function toggleCallingTimes(isChecked) {
        var start    = document.getElementById("{!$Component.QueryBuilder.editPage.call_start_time}");
        var end      = document.getElementById("{!$Component.QueryBuilder.editPage.call_end_time}");

        if (start && end) {
            start.disabled = ! isChecked;
            end.disabled   = ! isChecked;
        }
    }

    function buildRoleMap(){
        var l = document.getElementById('{!$Component.QueryBuilder.role_option_list}');
        eval('var items = '+l.innerHTML);
        var options = [];
        var selected = [];
        for (var i = 0; i < items.length; i++) {
             var group_name = items[i].group_name;//document.getElementById(id+":group_name").innerHTML;
             var label      = items[i].label;//document.getElementById(id+":label").innerHTML;
             var role_id    = items[i].id;//document.getElementById(id+":id").innerHTML;
             var sort_data  = items[i].sort_data;//document.getElementById(id+":sort_data").innerHTML;
             if (items[i].selected == '1') {
                 selected[selected.length] = role_id;
                 if (existingSelduel_select_1.options.length == 1 && existingSelduel_select_1.options[0].value == "") {
                     existingSelduel_select_1.options[0] = null;
                 }

                 existingSelduel_select_1.options[existingSelduel_select_1.options.length] = new Option(label, role_id);
             }

             options[options.length] = [group_name, label, role_id, sort_data.toLowerCase(), existingSelduel_select_1];
        }

        duel_select_0Var.addOptions(false, options);
        existingSelduel_select_0.options[0] = new Option('--None--','');
        duel_select_0Var.filter();
    }

    var current_filter_number = 0;

    window.clearCampaign = function() {
        qbjq("#QueryBuilder\\:editPage\\:Campaign_lkid").val('');
        qbjq("#QueryBuilder\\:editPage\\:Campaign").val('');
        qbjq("#QueryBuilder\\:editPage\\:Campaign_lkold").val('');
        qbjq("#QueryBuilder\\:editPage\\:campaign_member_status option").each(function(item, ele) {
            if (item > 0) {
                qbjq(ele).remove();
            }
        });
    };

    function getSeparatorFromFieldType(type) {
        var separator = ';';
        if (type == 'Picklist' || type == 'RecordType') {
            separator = ',';
        }
        return separator;
    }

    function insertSelected() {
        var valName = '{!$Component.QueryBuilder.editPage}:fval' + current_filter_number;
        var colName = '{!$Component.QueryBuilder.editPage}:fcol' + current_filter_number;
        var sel     = document.getElementById(colName);
        var valSel  = document.getElementById(valName);
        if (val2type[splitFilterField(sel.value)] == 'Boolean') {
            if (document.getElementById('{!$Component.QueryBuilder.editPage}:chkbox0').checked) {
                valSel.value = 'True';
            }
            else if (document.getElementById('{!$Component.QueryBuilder.editPage}:chkbox1').checked) {
                valSel.value = 'False';
            }
        }
        else if (val2type[splitFilterField(sel.value)] == 'Date' || val2type[splitFilterField(sel.value)] == 'DateTime') {
            valSel.value = document.getElementById('{!$Component.QueryBuilder.editPage}:date_value').value;
            if (valSel.value.indexOf(" n ") > -1) {
                alert("Please be sure to replace 'n' with your desired number!");
            }
        }
        else {

            var cb   = document.getElementsByName('{!$Component.QueryBuilder.editPage.picklist_options}');
            var list = '';
            var separator = getSeparatorFromFieldType(val2type[splitFilterField(sel.value)]);
            for (var i = 0; i < cb.length; i++) {
                if (cb[i].type == 'checkbox' && cb[i].checked) {
                    if (list != '') {
                        list += separator;
                    }
                    var v = cb[i].value;
                    var quote = v.indexOf(separator) >= 0 || v.indexOf('"') >= 0;
                    v = v.replace(/"/g, '\\"');

                    if(quote) {
                        v = '"' + v + '"';
                    }
                    list += v;
                    /*unset before post*/
                    cb[i].checked = false;
                }
            }
            valSel.value = list;
        }

        document.getElementById('{!$Component.QueryBuilder.editPage.value_picker}').style.display = 'none';
    }

    function showFieldOptions(filter_number) {
        setTemporaryName();

        current_filter_number = filter_number;
        var colName = 'QueryBuilder:editPage:fcol' + filter_number;
        var sel = document.getElementById(colName);

        document.getElementById('{!$Component.QueryBuilder.editPage}:picklist_values').style.display = 'none';
        document.getElementById('{!$Component.QueryBuilder.editPage}:date_values').style.display     = 'none';
        document.getElementById('{!$Component.QueryBuilder.editPage}:boolean_values').style.display  = 'none';
        if (val2type[splitFilterField(sel.value)] == 'Boolean') {
            document.getElementById('{!$Component.QueryBuilder.editPage.value_picker}').style.display   = '';
            document.getElementById('{!$Component.QueryBuilder.editPage}:boolean_values').style.display = '';
        }
        else if (val2type[splitFilterField(sel.value)] == 'Date' || val2type[splitFilterField(sel.value)] == 'DateTime') {
            document.getElementById('{!$Component.QueryBuilder.editPage.value_picker}').style.display = '';
            document.getElementById('{!$Component.QueryBuilder.editPage}:date_values').style.display  = '';
        }
        else {
            document.getElementById('{!$Component.QueryBuilder.editPage}:loading').style.display = '';
            updatePicklistOptions(sel.value);
        }
    }

    function showPickListOptions(){
        unsetTemporaryName();
        document.getElementById('{!$Component.QueryBuilder.editPage}:loading').style.display         = 'none';
        document.getElementById('{!$Component.QueryBuilder.editPage}:picklist_values').style.display = '';
        document.getElementById('{!$Component.QueryBuilder.editPage.value_picker}').style.display    = '';
    }

    var oppLabels  = new Array();
    oppLabels['e'] = 'equals';
    oppLabels['n'] = 'not equal to';
    oppLabels['s'] = 'starts with';
    oppLabels['c'] = 'contains';
    oppLabels['k'] = 'does not contain';
    oppLabels['l'] = 'less than';
    oppLabels['g'] = 'greater than';
    oppLabels['m'] = 'less or equal';
    oppLabels['h'] = 'greater or equal';
    oppLabels['u'] = 'includes';
    oppLabels['x'] = 'excludes';

    var allOperators = ['e','n','s','c','k','l','g','m','h','u','x'];
    var noneLabel    = '--None--';

    function resetValue(filter_number){
        document.getElementById('{!$Component.QueryBuilder.editPage}:fval' + filter_number).value = '';
        document.getElementById('{!$Component.QueryBuilder.editPage}:fop'  + filter_number).value = '';
    }

    function splitFilterField(value) {
        var split_val = value.split('@');
        if (split_val.length == 2) {
            return split_val[1];
        }
        return value;
    }

    function validateFilters() {
        var validation_elements = qbjq('.validation_error');
        for (var i = 0; i < validation_elements.length; i++ ) {
            validation_elements[i].parentNode.removeChild(validation_elements[i]);
        }

        var has_failed = false;

        for (var i = 1; i <= 10; i++) {
            var colName    = document.getElementById('QueryBuilder:editPage:fcol' + i);
            var valueObject = document.getElementById('QueryBuilder:editPage:fval' + i);
            var value = valueObject.value;

            var field_id = colName.value;
            var type = val2type[splitFilterField(field_id)];

            if (!field_id) {
                continue;
            }

            var valid = false;
            if (type == 'DateTime' || type == 'Date') {
                valid = validateDate(value);
            } else if (type == 'Integer') {
                valid = validateInteger(value);
            } else if (type == 'Double' || type == 'Number' || type == 'Currency' || type == 'Percent') {
                valid = validateDouble(value);
            } else if (type == 'Checkbox' || type == 'Boolean') {
                valid = validateCheckbox(value);
            } else if (type == 'AutoNumber') {
                valid = validateInteger(value);
            } else if (type == 'String') {
                valid = true;
            } else if (type == 'Picklist' || type == 'RecordType') {
                valid = true; // TODO: make this check for balanced quotes?
            } else if (type == 'Email') {
                valid = true;
            } else if (type == 'Reference') {
                valid = true; //valid = validateReference(value);
            } else {
                valid = true;
            }

            if (!valid) {
                has_failed = true;
                var tmp_error = document.createElement('span');
                tmp_error.style.color = '#D74C3B';
                tmp_error.setAttribute('class', 'validation_error');
                tmp_error['innerHTML'] = '<br />' + getValidationErrorForType(type);
                valueObject.parentNode.appendChild(tmp_error);
            }
        }

        //Make sure there are no more than 2 different type of related objects
        var object_type = document.getElementById('QueryBuilder:editPage:object_type').value;
        var relatedObjectSet = {};
        var relatedObjectCount = 0;
        for (var i = 1; i <= 10; i++) {
            var colName    = document.getElementById('QueryBuilder:editPage:fcol' + i);
            var valueObject = document.getElementById('QueryBuilder:editPage:fobj' + i);
            var value = valueObject.value;
            var field_id = colName.value;

            if (value == object_type || !field_id) {
                continue;
            }
            if (!relatedObjectSet[value]) {
                relatedObjectSet[value] = 0;
                relatedObjectCount++;
            }
            relatedObjectSet[value]++;
            valid = (relatedObjectCount <= 2);

            if (!valid) {
                has_failed = true;
                var tmp_error = document.createElement('span');
                tmp_error.style.color = '#D74C3B';
                tmp_error.setAttribute('class', 'validation_error');
                tmp_error['innerHTML'] = '<br />' + 'Dialing lists do not support more than two related object types.'
                    +'<br />Change the object type to match an existing selection.';
                valueObject.parentNode.appendChild(tmp_error);
            }
        }
        //Fail if 'OR' are used and any related objects are used
        if (relatedObjectCount > 0) {
            var valueObject = document.getElementById('QueryBuilder:editPage:bool_filter');
            filterValue = valueObject.value;
            if (filterValue) {
                has_failed = true;
                var tmp_error = document.createElement('span');
                tmp_error.style.color = '#D74C3B';
                tmp_error.setAttribute('class', 'validation_error');
                tmp_error['innerHTML'] = 'Dialing lists with multiple object types cannot use advanced filters.<br />';
                var error_span = document.getElementById('QueryBuilder:editPage:bool_filter_error');
                valueObject.parentNode.insertBefore(tmp_error,error_span);
            }
        }

        if (has_failed) {
            document.getElementById('qb_filter_error').style.display = 'block';
        } else {
            document.getElementById('qb_filter_error').style.display = 'none';
        }
        return !has_failed;
    }

    function validateReport() {
        var r = document.getElementById('QueryBuilder:editPage:data_source:1');
        var is_valid = true;
        if (r && r.checked) {
            var object_selected = document.getElementById('{!$Component.QueryBuilder.editPage.reportidcolumn}_src').value;
            if (object_selected == "") {
                is_valid = false;
            }
        }
        if (!is_valid) {
            document.getElementById('loaded_invalid_report_span').style.display = '';
        }
        return is_valid;
    }

    function getValidationErrorForType(type) {
        if (type == 'Date' || type == 'DateTime') {
            return 'Error: Invalid date (Valid date format 1/19/2011 or 1/19/2011 2:53 PM)';
        } else if (type == 'Boolean' || type=='Checkbox') {
            return 'Error: Invalid Boolean';
        } else {
            return 'Error: Invalid value';
        }
    }

    function validateDouble(double_string) {
        if (double_string.match(/[^\,\.\d]/)) {
            return false;
        }
        return true;
    }

    function validateInteger(integer_string) {
        if (integer_string.match(/[^\,\d]/)) {
            return false;
        }
        return true;
    }

    function validateReference(reference_id) {
        if (!(reference_id.length == 15 || reference_id.length == 18)) {
            return false;
        }
        if (reference_id.match(/(?:[a-zA-Z0-9]+)/) != reference_id) {
            return false;
        }
        return true;
    }

    function validateCheckbox(checkbox) {
        if (checkbox == 'True' || checkbox == 'False') {
            return true;
        }
        return false;
    }

    function validateMultiPicklist(multipicklist) {
        return true;
    }

    function validateDate(date_string) {
        var tmp_date = Date.parse(date_string);
        if (date_string == '') {
            return true;
        }

        if (!isNaN(tmp_date) ) {
            /*
                http://www.salesforce.com/us/developer/docs/api/Content/sforce_api_calls_soql_select_dateformats.htm
                Max/Min dates 1700-01-01T00:00:00Z GMT - 4000-12-31T00:00:00Z GMT
            */
            if (tmp_date < -8520310800000) {
                return false;
            }
            if (tmp_date > 64092150000000) {
                return false;
            }
            return true;
        }
        date_string = date_string.toUpperCase();
        var whitelist = {'YESTERDAY':'', 'TODAY':'', 'TOMORROW':''};
        if (whitelist.hasOwnProperty(date_string)) {
            return true;
        }

        if (!date_string.match(/^((LAST)|(NEXT)|(THIS)) ((\d+) )?(FISCAL )?((YEARS?)|(DAYS?)|(QUARTERS?)|(MONTHS?)|(WEEKS?))$/)) {
            return false;
        }
        return true;
    }

    function updateOperator(filter_number) {
        var colName    = '{!$Component.QueryBuilder.editPage}:fcol' + filter_number;
        var opName     = '{!$Component.QueryBuilder.editPage}:fop'  + filter_number;
        var lookupName = '{!$Component.QueryBuilder.editPage}:flkp' + filter_number;

        var selObj = document.getElementById(opName);
        var sel    = document.getElementById(colName);
        if (selObj.offsetWidth > 0) {
            selObj.style.width = selObj.offsetWidth + 'px';
        }

        var ops = null;
        var val = sel.options[sel.selectedIndex];
        if (val) {
            ops = type2ops[val2type[splitFilterField(val.value)]];
        }

        if (ops == null) {
            ops = allOperators;
        }

        var currSelected = selObj.options[selObj.selectedIndex];
        selObj.length    = 0;
        var off          = 0;
        if (noneLabel != null) {
            off               = 1;
            selObj.options[0] = new Option (noneLabel, '');
            if (currSelected.value == '') {
                selObj.options[0].selected = true;
            }
        }

        for (var i = 0; i < ops.length; i++) {
            var label = oppLabels[ops[i]];
            if (label == null) {
                continue;
            }

            var option              = new Option (oppLabels[ops[i]], ops[i]);
            selObj.options[i + off] = option;
            if (currSelected != null && currSelected.value == option.value) {
                option.selected = true;
            }
        }

        if (lookupName) {
            if (val2type[splitFilterField(val.value)] == 'Picklist' ||
                val2type[splitFilterField(val.value)] == 'MultiPicklist' ||
                val2type[splitFilterField(val.value)] == 'Division' ||
                val2type[splitFilterField(val.value)] == 'RecordType' ||
                val2type[splitFilterField(val.value)] == 'Boolean' ||
                val2type[splitFilterField(val.value)] == 'Date' ||
                val2type[splitFilterField(val.value)] == 'DateTime') {
                    document.getElementById(lookupName).style.display = '';
            } else {
                document.getElementById(lookupName).style.display = 'none';
            }
        }
    }

    function onLoadCriteria() {
        if (document.getElementById('QueryBuilder:editPage:duel_select_0')) {
            buildRoleMap();
            initEmailFolders();
        }
        for (var i = 1; i <= 12; i++) {
            buildFieldTypeMap(i);
            if (i <= 10)
                updateOperator(i);
        }

        if (document.getElementById('QueryBuilder:editPage:duel_select_0')) {
            document.getElementById('duel').style.display = (document.getElementById('{!$Component.QueryBuilder.editPage.fshare}:2').checked ? 'block' : 'none');
        }

        showHideNeuralytics();
        qbjq('#QueryBuilder\\:editPage\\:neuralytics_sort').change(updateSorts);
    }

    function checkSaveStatus() {
        var textSpan  = document.getElementById('bool_filter_error_text');
        var pageMsgs  = document.getElementById('{!$Component.QueryBuilder.editPage.pageMsgsInner}');
        var errorSpan = document.getElementById('{!$Component.QueryBuilder.editPage.bool_filter_error}');
        if (pageMsgs) {
            if (pageMsgs.innerHTML == '') {
                getSelectedQBRoles();
            } else {
                window.scroll(0,0);
                toggleSaveBtns(false);
            }
        } else if (textSpan && textSpan.innerHTML != '' && errorSpan) {
            errorSpan.style.display = '';
        }
    }

    function getSelectedQBRoles() {
        if (document.getElementById('QueryBuilder:editPage:duel_select_0')) {
            if (!getDialerQueryId()) {
                document.getElementById("QueryBuilder:editPage:query_name_error").style.display = "";
                document.getElementById("{!$Component.QueryBuilder.editPage.query_name}").style.borderWidth   = "2px";
                document.getElementById("{!$Component.QueryBuilder.editPage.query_name}").style.borderColor   = "#cc0000";
                toggleSaveBtns(false);
                return;
            }

            /*
             * Layout JavaScript, removed until we determine what to do with the layout. This statement
             * will break the Save function if the layout is not present!
            if (document.getElementById("{!$Component.QueryBuilder.editPage.layout}").value == "") {
                document.getElementById("{!$Component.QueryBuilder.editPage.layout_error}").style.display = "";
                document.getElementById("{!$Component.QueryBuilder.editPage.layout}").style.borderWidth   = "2px";
                document.getElementById("{!$Component.QueryBuilder.editPage.layout}").style.borderColor   = "#cc0000";
                return;
            }
            */

            if (existingSelduel_select_1.options.length > 0 && existingSelduel_select_1.options[0].value != "") {
                var options = "";
                for (var i = 0; i < existingSelduel_select_1.options.length; i++) {
                    if (options != "") {
                        options += ",";
                    }

                    existingSelduel_select_1.options[i].selected = false;
                    options += existingSelduel_select_1.options[i].value;
                }

                saveSelectedQBRoles(options);
            } else {
                emptyList();
            }
        } else {
            emptyList();
        }
    }

    var quick_save = true;
    var show_total = false;
    function hideStatuses(){
        document.getElementById('roleSaveStatus.stop').style.display            = 'none';
        document.getElementById('querySaveStatus.stop').style.display           = 'none';
        document.getElementById('addItemsStatus.stop').style.display            = 'none';
        document.getElementById('addItemsFromReportStatus.stop').style.display  = 'none';
        document.getElementById('savestatus_mirror').style.display  = 'none';
    }

    function redirectToView(){
        if (! document.getElementById('QueryBuilder:editPage:duel_select_0')) {
            window.location.href="/apex/is_close";
        } else {
            var id = getDialerQueryId();
            if(id) {
                top.window.location.href = '/apex/Query_Builder_List_View';//+id;
            }
        }
    }

    function getDialerQueryId(){
        var id = document.getElementById('{!$Component.QueryBuilder.editPage.sf_query_id}').innerHTML;
        if (id != "") {
            if (id.length == 18) {
                id = id.substr(0, 15);
            }

            return id;
        }
        else {
            return false;
        }
    }

    function unselectRoles(){
        if (document.getElementById('QueryBuilder:editPage:duel_select_0')) {
            var dd = document.getElementById('QueryBuilder:editPage:duel_select_0');
            var i;
            for (i = 0; i < dd.options.length; i++) {
                dd.options[i].selected = false;
            }

            dd = document.getElementById('QueryBuilder:editPage:duel_select_1');
            for (i = 0; i < dd.options.length; i++) {
                dd.options[i].selected = false;
            }
        }
    }

    function preObjectTypeChange() {
        toggleSaveBtns(true);

        var object_type = document.getElementById('{!$Component.QueryBuilder.editPage.object_type}').value;

        qbjq('#case_type_select').hide();
        qbjq('#opportunity_type_select').hide();
        if(object_type == 'Opportunity') {
            qbjq('#opportunity_type_select').show();
        } else if (object_type == 'Case') {
            qbjq('#case_type_select').show();
        }

        switch(object_type) {
            case 'Lead':
            case 'Contact':
                if(document.getElementById('{!$Component.QueryBuilder.editPage}:filter_by_campaign')) {
                    document.getElementById('{!$Component.QueryBuilder.editPage}:filter_by_campaign').style.display = '';
                }
                break;
            case 'Account':
            case 'Opportunity':
            case 'Case':
            case 'Task':
                if (document.getElementById('{!$Component.QueryBuilder.editPage}:filter_by_campaign')) {
                    document.getElementById('{!$Component.QueryBuilder.editPage}:filter_by_campaign').style.display = 'none';
                }
                break;
        }

        for (var x = 1; x <= 10; x++) {
            document.getElementById('{!$Component.QueryBuilder.editPage}:fcol'+x).value = '';
            document.getElementById('{!$Component.QueryBuilder.editPage}:fop'+x).value  = '';
            resetValue(x);
            updateOperator(x);
            if (x < 4) {
                document.getElementById('{!$Component.QueryBuilder.editPage}:scol'+x).value = '';
                document.getElementById('{!$Component.QueryBuilder.editPage}:sort'+x).value = 'ASC';
            }
        }
        prepDialMinMax(object_type);
    }

    function prepDialMinMax(object_type) {
        var dials_min = null;
        var dials_min_apex = null;
        var dials_max = null;
        var dials_max_apex = null;
        var minutes_between_calls = null;
        var minutes_between_calls_apex = null;

        if (undefined == object_type) {
                object_type = document.getElementById('{!$Component.QueryBuilder.editPage.object_type}').value;
        }
        if (undefined == object_type) {
                throw('Object Type not found');
        }
        dials_min = document.getElementById('dials_min');
        dials_min_apex = document.getElementById('{!$Component.QueryBuilder.editPage.dials_min_apex}');
        dials_max = document.getElementById('dials_max');
        dials_max_apex = document.getElementById('{!$Component.QueryBuilder.editPage.dials_max_apex}');
        if(document.getElementById('minutes_between_calls')){
                minutes_between_calls      = document.getElementById('minutes_between_calls');
                minutes_between_calls_apex = document.getElementById('{!$Component.QueryBuilder.editPage.minutes_between_calls_apex}');
        }
        switch (object_type) {
            case 'Task':
            case 'Opportunity':
            case 'Case':
                dials_min.style.display = 'none';
                dials_max.style.display = 'none';
                dials_min_apex.value = '';
                dials_max_apex.value = '';
                if(minutes_between_calls != null){
                    minutes_between_calls.style.display = 'none';
                    minutes_between_calls_apex.value = '';
                }
                break;
            default:
                dials_min.style.display = '';
                dials_max.style.display = '';
                if(minutes_between_calls != null){
                    minutes_between_calls.style.display = '';
                }
        }
    }

    //This code is used for the Advanced Filter Options
    var lastRow = {!FilterCount};
    greyLink('fRemoveRowLink');
    unGreyLink('fAddRowLink');
    function onLoadBooleanFilter() {
        if (document.getElementById('{!$Component.QueryBuilder.editPage}:bool_filter').value && document.getElementById('bool_filter_span').style.display == 'none' ) {
            toggleBooleanFilter();
        }
    }

    function greyLink(linkId) {
        if (document.getElementById(linkId)) {
            document.getElementById(linkId).style.display            = 'none';
            document.getElementById(linkId + 'Greyed').style.display = '';
        }
    }

    function unGreyLink(linkId) {
        if (document.getElementById(linkId)) {
            document.getElementById(linkId).style.display = '';
            document.getElementById(linkId + 'Greyed').style.display = 'none';
        }
    }

    function addRow() {
        if (lastRow < 10) {
            toggleRow(lastRow+1, true);
            lastRow++;
            postRowProcess();
        }

        document.getElementById('fAddRowLink').blur();
    }

    function removeRow() {
        if (lastRow > 5) {
            toggleRow(lastRow, false);
            lastRow--;
            postRowProcess();
        }

        document.getElementById('fRemoveRowLink').blur();
    }

    function toggleRow(row, showing) {
        var displayRow                                    = showing ? '': 'none';
        var x          = row;
        document.getElementById('frow' + x).style.display = displayRow;
        var op         = document.getElementById('{!$Component.QueryBuilder.editPage}:fop' + x);
        op.style.width = document.getElementById('{!$Component.QueryBuilder.editPage}:fop' + 1).style.width;
        if (!showing) {
            document.getElementById('{!$Component.QueryBuilder.editPage}:fcol' + x).selectedIndex = 0;
            document.getElementById('{!$Component.QueryBuilder.editPage}:fop' + x).selectedIndex  = 0;
            document.getElementById('{!$Component.QueryBuilder.editPage}:fval' + x).value         = '';
            document.getElementById('{!$Component.QueryBuilder.editPage}:flkp' + x).style.display = 'none';
        }
        setTimeout(postRowProcess, 1000);
    }

    function postRowProcess() {
        if (lastRow > 5) {
            unGreyLink('fRemoveRowLink');
        } else {
            greyLink('fRemoveRowLink');
        }

        if (lastRow < 10) {
            unGreyLink('fAddRowLink');
        } else {
            greyLink('fAddRowLink');
        }
    }

    function toggleEmailFolders() {
        var use_salesforce_templates = document.getElementById("{!$Component.QueryBuilder.editPage.use_salesforce_templates}:0").checked;
        setTemporaryName();
        qbjq('[id="QueryBuilder:editPage:availableEmailFolders"]').children().remove();
        qbjq('[id="QueryBuilder:editPage:emailFolders"]').children().remove();
        qbjq('#loading_folders').show();
        setEmailFolderType(use_salesforce_templates ? '1' : '0');
    }

    function toggleLocalPresence(show) {
        var items = document.getElementsByClassName('local_presence_panel');
        if (show) {
            for (var i=0; i < items.length; i++) {
                items[i].style.display = "";
            }
        } else {
            for (var i=0; i < items.length; i++) {
                items[i].style.display = "none";
            }
        }
    }

    function toggleBooleanFilter() {
        if (document.getElementById('{!$Component.QueryBuilder.editPage}:fcol1').disabled) {
            return;
        }

        var bool_filter = document.getElementById('bool_filter_span');
        var showing     = (bool_filter.style.display == 'none');
        var display     = showing ? '' : 'none';
        var displayRow  = showing ? (isIE ? 'block' : 'table-row') : 'none';
        if (document.getElementById('frowButtons')) {
            document.getElementById('frowButtons').style.display = displayRow;
        }

        bool_filter.style.display                               = display;
        document.getElementById('bool_filter_toggle').innerHTML = showing ? 'Clear Advanced Options' : 'Advanced Options...';
        if (!showing) {
            document.getElementById('{!$Component.QueryBuilder.editPage}:bool_filter').value = '';
            lastRow = 5;
        }
        else if (!document.getElementById('{!$Component.QueryBuilder.editPage}:bool_filter').value || (document.getElementById('{!$Component.QueryBuilder.editPage}:bool_filter').value == '')) {
            var initialBoolFilter = '';
            for (var i = 0; i < 10; i++) {
                var x      = i + 1;
                var colEle = document.getElementById('{!$Component.QueryBuilder.editPage}:fcol' + x);
                if (typeof colEle.selectedIndex == 'number' ? colEle.selectedIndex != 0 : colEle.value.length > 0) {
                    if (initialBoolFilter.length > 0) {
                        initialBoolFilter += ' AND ';
                    }

                    initialBoolFilter += (i + 1);
                }
            }

            document.getElementById('{!$Component.QueryBuilder.editPage}:bool_filter').value = initialBoolFilter;
        }

        var andVisibility = showing ? 'hidden' : 'visible';
        for (var i = 0; i < 10; i++) {
            if (i > 5 && !showing) {
                toggleRow(i, showing);
            }

            var x                                          = i + 1;
            document.getElementById('f' + x).style.display = display;
            if (i < 4) {
                document.getElementById('and' + x).style.visibility = andVisibility;
            }
        }

        postRowProcess();
    }

    function updateDataSourceDisplay(value){
        var report_panels = ['QueryBuilder:editPage:report_panel'];
        var query_panels  = [
            '{!$Component.QueryBuilder.editPage.object_type_panel}',
            '{!$Component.QueryBuilder.editPage.filter_panel}',
            '{!$Component.QueryBuilder.editPage.sort_criteria_panel}'];
        for (var i = 0; i < query_panels.length; i++) {
            try {
                document.getElementById(query_panels[i]).style.display = (value != 'Report')?'':'none';
            }
            catch(e){}
        }

        for (var i = 0; i < report_panels.length; i++) {
            try {
                document.getElementById(report_panels[i]).style.display = (value == 'Report')?'':'none';
            }
            catch(e){}
        }

        if(value == 'Report') {
            initFetchReports();
        }
    }

    function initReportFolders() {
        var folder_div = qbjq('#QueryBuilder\\:editPage\\:encoded_folders');
        if (folder_div.length) {
            var folders    = '';

            try {
                folders    = JSON.parse(folder_div.html());
            } catch(e) {}

            if (typeof folders !== 'undefined') {
                var selected_folder = qbjq('#QueryBuilder\\:editPage\\:reportfolder').val();
                var folder_dd       = qbjq('#QueryBuilder\\:editPage\\:reportfolder_src');
                for (var reportId in folders) {
                    folder_dd.append(new Option(folders[reportId], reportId));
                }

                if (selected_folder) {
                    folder_dd.val(selected_folder);
                }
            }
        }
    }

    function showHideNeuralytics() {
        var neuralytics_panel = document.getElementById('QueryBuilder:editPage:neuralytics_panel');
        if (neuralytics_panel) {
            checkLicense('neur',
                function (data) {
                    neuralytics_panel.style.display = data.message ? 'block' : 'none';
                    if (data.message)
                        updateSorts();
                });
        }
    }

    /**
     * Calls the check_license action.
     * @param string license The license key to check.
     * @param function callback The function to call on success.
     */
    function checkLicense(license, callback) {
        var user_subdomain = '{!JSENCODE($User.is_subdomain__c)}';
        qbjq.ajax({
            url: 'https://' + user_subdomain + '.insidesales.com/do=noauth/check_license?key=' + license,
            dataType: 'jsonp',
            success: callback,
            cache: true
        });
    }

    // Enables or disables the sort criteria section based off of the neuralytics sort drop-down.
    function updateSorts(disabled) {
        if (typeof disabled !== 'boolean') {
            if ({!IsSeekQuery}) {
                // Seek List
                // See if the URL contains the neuralytics flag
                var index = location.search.indexOf("neuralytics");
                if (index != -1) {
                    index += 12;
                    disabled = location.search.substring(index, index+1) == "1";
                } else {
                    // No neuralytics flag, do nothing.
                    return;
                }
            } else {
                disabled = qbjq('#QueryBuilder\\:editPage\\:neuralytics_sort').val() == "On";
            }
        }

        qbjq('#neuralytics_sort_message').css('display', disabled ? 'block' : 'none');
        // Disable/enable the three sort drop-downs.
        for (var i=1; i<=3; i++) {
            qbjq('#QueryBuilder\\:editPage\\:scol' + i).attr("disabled", disabled);
            qbjq('#QueryBuilder\\:editPage\\:sort' + i).attr("disabled", disabled);
        }
    }

    function reportFolderChanged() {
        var folder_select = qbjq('#QueryBuilder\\:editPage\\:reportfolder_src');
        var folder_input  = qbjq('#QueryBuilder\\:editPage\\:reportfolder');

        folder_input.val('');
        if (folder_select.prop('selectedIndex') !== 0) {
            folder_input.val(folder_select.val());
        }

        updateReportOptionsStart(false);
        updateReportFolder();
    }

    function reportFoldersUpdated() {
        updateReportOptions();
    }

    /*
     * In order to do a request to Apex, required fields must be populated.  The following functions are a hack to allow this to happen if the user
     * has not set the required fields.
     */
    function setTemporaryName(){
        if(document.getElementById('QueryBuilder:editPage:use_salesforce_templates:0')) {
            document.getElementById("QueryBuilder:editPage:use_salesforce_templates:0").disabled = true;
            document.getElementById("QueryBuilder:editPage:use_salesforce_templates:1").disabled = true;
        }
        document.getElementById('{!$Component.QueryBuilder.editPage.query_name}').disabled = true;
        if (document.getElementById('{!$Component.QueryBuilder.editPage.query_name}').value == '') {
            document.getElementById('{!$Component.QueryBuilder.editPage.query_name}').value = '- - - - - - - - - - - - - - - - - - - - - - - - - - -';
        }
    }

    function unsetTemporaryName(){
        if(document.getElementById('QueryBuilder:editPage:use_salesforce_templates:0')) {
            document.getElementById("QueryBuilder:editPage:use_salesforce_templates:0").disabled = false;
            document.getElementById("QueryBuilder:editPage:use_salesforce_templates:1").disabled = false;
            qbjq("#loading_folders").hide();
        }
        document.getElementById('{!$Component.QueryBuilder.editPage.query_name}').disabled = false;
        if(document.getElementById('{!$Component.QueryBuilder.editPage.query_name}').value == '- - - - - - - - - - - - - - - - - - - - - - - - - - -'){
            document.getElementById('{!$Component.QueryBuilder.editPage.query_name}').value = '';
        }
    }

    function refreshReports() {
        var r = document.getElementById('QueryBuilder:editPage:data_source:1');
        if (r && r.checked) {
            setTemporaryName();
            document.getElementById('loading_report_span').style.display = '';
            document.getElementById('loaded_invalid_report_span').style.display = 'none';
            var clear_cache = document.getElementById('QueryBuilder:refresh_button:clear_cache');
            if(clear_cache.value == 'true') {
                sf_reports = [];
            }
            initRefreshList();
        }
    }

    function checkRefreshStatusComplete() {
        var div = document.getElementById('{!$Component.QueryBuilder.editPage.sf_report_list_refresh_status}');
        if(div.innerHTML != '') {
            eval("var response = "+div.innerHTML);
        }
        else {
            response = {"message":""};
        }

        if(response.message == '' || response.message == 'refreshing') {
            setTimeout("updateReportListRefreshStatus()", 500);
        }
        else {
            if(response.message == 'too soon') {
                alert('Refreshing can not be done more than once per minute.  Please wait at least one minute before clicking refresh again.');
            }
            initFetchReports();
        }
    }

    var sf_reports = [];
    var sf_reports_loaded_at_once = false;
    function initFetchReports(){
            setTemporaryName();
            document.getElementById('QueryBuilder:refresh_span').style.display = 'none';
            document.getElementById('QueryBuilder:fetch_span').style.display = '';
            document.getElementById('QueryBuilder:refresh_button').style.display = 'none';
            fetchReports();
    }

    function fetchedReports() {
        document.getElementById('QueryBuilder:refresh_button').style.display = '';
        document.getElementById('QueryBuilder:fetch_span').style.display = 'none';
        unsetTemporaryName();
        var div = document.getElementById('{!$Component.QueryBuilder.editPage.encoded_reports}');
        eval("var result = "+div.innerHTML);
        if (result.success && result.reports.length) {
            if (result.reports.length === 1) {
                //We are just pulling a single report
                //remove old object if found
                for (var i = 0; i < sf_reports.length; i++) {
                    if (sf_reports[i].id == result.reports[0].id) {
                        sf_reports.splice(i,1);
                        i = sf_reports.length;
                    }
                }
                sf_reports[sf_reports.length] = result.reports[0];
            } else if (result.reports.length > 1) {
                sf_reports = result.reports;
                sf_reports_loaded_at_once = true;
            }

            updateReportOptions(true);
            var report_select   = document.getElementById('{!$Component.QueryBuilder.editPage.reportid}_src');
            document.getElementById('{!$Component.QueryBuilder.editPage.reportname}').value = report_select.options[report_select.selectedIndex].text;
        } else {
            //Show error icon
            var folder_select = document.getElementById('{!$Component.QueryBuilder.editPage.reportfolder}_src');
            var report_select = document.getElementById('{!$Component.QueryBuilder.editPage.reportid}_src');
            var object_select = document.getElementById('{!$Component.QueryBuilder.editPage.reportidcolumn}_src');

            folder_select.removeAttribute('disabled');
            report_select.removeAttribute('disabled');
            object_select.setAttribute('disabled', 'true');
            document.getElementById('loading_report_span').style.display = 'none';
            document.getElementById('loaded_invalid_report_span').style.display = '';
            object_input.value = "";
        }
    }

    function updateReportOptionsStart(init)
    {
        if(typeof(init) == "undefined" || init == null) init = false;
        var folder_select = document.getElementById('{!$Component.QueryBuilder.editPage.reportfolder}_src');
        var folder_input  = document.getElementById('{!$Component.QueryBuilder.editPage.reportfolder}');
        var report_select = document.getElementById('{!$Component.QueryBuilder.editPage.reportid}_src');
        var report_input  = document.getElementById('{!$Component.QueryBuilder.editPage.reportid}');
        var report_selected = document.getElementById('{!$Component.QueryBuilder.editPage.sf_report_id}').innerHTML;
        var object_select   = document.getElementById('{!$Component.QueryBuilder.editPage.reportidcolumn}_src');

        folder_input.value = '';
        if (folder_select.selectedIndex !== 0) {
            folder_input.value = folder_select[folder_select.selectedIndex].value;
        }

        if (!init) {
            while (report_select.options.length > 0) {
                report_select.options[report_select.options.length-1] = null;
            }
            while (object_select.options.length > 0) {
                object_select.options[object_select.options.length-1] = null;
            }
            document.getElementById('loading_report_span').style.display = '';
            document.getElementById('loaded_invalid_report_span').style.display = 'none';
            folder_select.setAttribute("disabled","true");
            report_select.setAttribute("disabled","true");
            object_select.setAttribute("disabled","true");
        }
    }

    function updateReportOptions(init)
    {
        if(typeof(init) == "undefined" || init == null) init = false;
        var folder_select = document.getElementById('{!$Component.QueryBuilder.editPage.reportfolder}_src');
        var folder_input  = document.getElementById('{!$Component.QueryBuilder.editPage.reportfolder}');
        var report_select = document.getElementById('{!$Component.QueryBuilder.editPage.reportid}_src');
        var report_input = document.getElementById('{!$Component.QueryBuilder.editPage.reportid}');
        var report_selected = document.getElementById('{!$Component.QueryBuilder.editPage.sf_report_id}').innerHTML;

        report_input.value = report_selected;
        if(report_selected != "") {
            if (report_select.options[0]) {
                //default to first value
                report_select.value = report_select.options[0].value;
            }
            for (var i = 0; i < report_select.options.length; i++) {
                if (report_select.options[i].value == report_selected) {
                    //only use this value if in the list (from the folder)
                    report_select.value = report_selected;
                }
            }
        }
        updateReportObjectOptions();
    }

    function updateReportObjectOptions() {
        var folder_select = document.getElementById('{!$Component.QueryBuilder.editPage.reportfolder}_src');
        var report_select   = document.getElementById('{!$Component.QueryBuilder.editPage.reportid}_src');
        var object_select   = document.getElementById('{!$Component.QueryBuilder.editPage.reportidcolumn}_src');
        var object_input = document.getElementById('{!$Component.QueryBuilder.editPage.reportidcolumn}');
        var object_selected = document.getElementById('{!$Component.QueryBuilder.editPage.reportidcolumn}_src').value;
        document.getElementById('loading_report_span').style.display = '';
        document.getElementById('loaded_invalid_report_span').style.display = 'none';
        folder_select.setAttribute("disabled","true");
        report_select.setAttribute("disabled","true");
        object_select.setAttribute("disabled","true");
        while (object_select.options.length > 0) {
            object_select.options[object_select.options.length-1] = null;
        }
        var found=false;
        for (var i = 0; i < sf_reports.length; i++) {
            if (sf_reports[i].id == report_select.value) {
                found=true;
                for (var j in sf_reports[i].available_types) {
                    object_select.options[object_select.options.length] = new Option(sf_reports[i].available_types[j], j);
                }
            }
        }
        if (object_select.options.length == 0 && (found||sf_reports_loaded_at_once)
                || !report_select.value) {
            folder_select.removeAttribute("disabled");
            report_select.removeAttribute("disabled");
            object_select.setAttribute("disabled","true");
            document.getElementById('loading_report_span').style.display = 'none';
            document.getElementById('loaded_invalid_report_span').style.display = '';
            object_input.value = "";
        } else if (object_select.options.length == 0 && !found && !sf_reports_loaded_at_once) {
            //load this report
            document.getElementById('QueryBuilder:refresh_button').style.display='none';
            document.getElementById('QueryBuilder:refresh_span').style.display='';
            setTemporaryName();
            //Set some parameters for initRefreshList
            var use_cache = document.getElementById('QueryBuilder:refresh_button:use_cache');
            var clear_cache = document.getElementById('QueryBuilder:refresh_button:clear_cache');
            use_cache.value = true;
            clear_cache.value = false;
            initRefreshList();
            use_cache.value = false;
            clear_cache.value = true;
        } else {
            document.getElementById('loading_report_span').style.display = 'none';
            folder_select.removeAttribute("disabled");
            report_select.removeAttribute("disabled");
            object_select.removeAttribute("disabled");
            if (object_selected != "") {
                object_select.value = object_selected;
            }

            if (object_select.value != object_selected) {
                object_select.selectedIndex = 0;
            }
            object_input.value = object_select.value;
        }
    }

    function addItemsToListByDataSource() {
        var r = document.getElementById('QueryBuilder:editPage:data_source:1');
        if (r && r.checked) {
            var ReportId       = document.getElementById('{!$Component.QueryBuilder.editPage.reportid}_src').value;
            var ReportIdColumn = document.getElementById('{!$Component.QueryBuilder.editPage.reportidcolumn}_src').value;
            addItemsToListFromReportInit(ReportId, ReportIdColumn);
        }
        else {
            addItemsToList();
        }
    }

    function checkAddItemsToListFromReportStatus() {
        var ReportId       = document.getElementById('{!$Component.QueryBuilder.editPage.reportid}_src').value;
        var ReportIdColumn = document.getElementById('{!$Component.QueryBuilder.editPage.reportidcolumn}_src').value;

        var div    = document.getElementById('{!$Component.QueryBuilder.editPage.sf_additemsstatus}');
        var status = div.innerHTML;
        if (status.indexOf("message") >= 0) {
            eval("var response = "+status);
            if (response.total_items) {
                document.getElementById('addItemsFromReportStatus.stop').innerHTML  =
                    document.getElementById('savestatus_mirror').innerHTML + ' Added: ' + response.total_items;
                var totalDiv = document.getElementById('{!$Component.QueryBuilder.editPage.sf_total_items}');
                totalDiv.innerHTML = response.total_items;
            }
            if (response.message == "complete") {
                document.getElementById('addItemsFromReportStatus.stop').innerHTML  = '...save complete...'
                    + ' Added: ' + response.total_items;
                document.getElementById('savestatus_mirror').innerHTML  = '...save complete...'
                addItemsComplete();
                return;
            }
        }

        addItemsToListFromReportUpdateStatus(ReportId, ReportIdColumn);
    }

    function addItemsComplete() {
        if (!document.getElementById('{!$Component.QueryBuilder.editPage.duel_select_0}')) {
            reloadSeekInitiative();
        }

        var totalDiv = document.getElementById('{!$Component.QueryBuilder.editPage.sf_total_items}');
        var total    = totalDiv ? parseInt(totalDiv.innerHTML) : 0;
        var do_save = true;
        var r = document.getElementById('QueryBuilder:editPage:data_source:1');
        if (total == 0 && r && r.checked) {
            do_save = confirm('Your chosen report and Primary Record ID appear to be valid, '
                +'but the report contains no data. Do you want to save '
                +'the Domino list anyway, or choose a different report?');
        }

        if (do_save) {
            if (!quick_save) {
                /* give reloadSeekInitiative time to initialize if we redirect too soon, insidesales.com is never signaled to sync the seek settings */
                setTimeout("redirectToView()", 1000);
            } else {
                setTimeout("hideStatuses()", 3000);
                if (show_total) {
                    var id = getDialerQueryId();
                    if (id) {
                        var extra = '';
                        if ({!IsSeekQuery}) {
                            var index = location.search.indexOf("neuralytics");
                            if (index != -1) {
                                var start = index;
                                var end   = index + 13;
                                extra = '&' + location.search.substring(start, end);
                            }
                        } else {
                            var sort_on = qbjq('#QueryBuilder\\:editPage\\:neuralytics_sort').val();
                            if (sort_on == 'Off') {
                                extra = '&neuralytics=0';
                            } else if (sort_on == 'On') {
                                extra = '&neuralytics=1';
                            }
                        }

                        window.open(
                            '/apex/Query_Builder_Preview?id=' + id + extra,
                            '_blank',
                            'width=850,height=900,scrollbars=yes'
                        );
                    }
                }
                toggleSaveBtns(false);
            }
        } else {
            toggleSaveBtns(false);
        }
    }

    function initEmailFolders(){
        var available_folders = document.getElementById('QueryBuilder:editPage:availableEmailFolders');
        var email_folders = document.getElementById('QueryBuilder:editPage:emailFolders');
        if(email_folders == null || available_folders == null) return;
        eval('var items = '+document.getElementById('QueryBuilder:selected_emails').innerHTML);
        for(var i = 0; i < items.length; i++){
            email_folders.options[email_folders.options.length] = new Option(items[i].label, items[i].value);
        }
        eval('var items = '+document.getElementById('QueryBuilder:available_emails').innerHTML);
        for(var i = 0; i < items.length; i++){
            available_folders.options[available_folders.options.length] = new Option(items[i].label, items[i].value);
        }
    }

    function prepEmailFolders() {
        // copy the data out of the emailFolders field
        var email_folders = document.getElementById('QueryBuilder:editPage:emailFolders');
        if (email_folders == null) {
            return;
        }
        var email_folder_options = [];
        var unfiled = false;
        for (var i = 0; i < email_folders.options.length; i++) {
            email_folder_options[email_folder_options.length] = email_folders.options[i].value;
        }
        if (unfiled) {
            email_folder_options[email_folder_options.length] = '0';
        }
        email_folder_options = email_folder_options.join(';');

        document.getElementById('QueryBuilder:editPage:emailFolderSelected').value=email_folder_options;

        var available_folders = document.getElementById('QueryBuilder:editPage:availableEmailFolders');
        for (var i=0; i < available_folders.children.length; i++) {
            var tmp_option = available_folders.children[i];
            tmp_option.selected = false;
        }
    }

    function move_email_folders_right() {
        var available_folders = document.getElementById('QueryBuilder:editPage:availableEmailFolders');
        var selected_folders = document.getElementById('QueryBuilder:editPage:emailFolders');
        for (var i=available_folders.children.length-1; i>=0; i--) {
            var tmp = available_folders.children[i];
            if (tmp.selected) {
                tmp.parentNode.removeChild(tmp);
                selected_folders.appendChild(tmp);
            }
        }
    }

    function move_email_folders_left() {
        var available_folders = document.getElementById('QueryBuilder:editPage:availableEmailFolders');
        var selected_folders = document.getElementById('QueryBuilder:editPage:emailFolders');
        for (var i=selected_folders.children.length-1; i>=0; i--) {
            var tmp = selected_folders.children[i];
            if (tmp.selected) {
                tmp.parentNode.removeChild(tmp);
                available_folders.appendChild(tmp);
            }
        }
    }

    /*
     * toggle all save buttons
     */
    function toggleSaveBtns(dis) {
        if (undefined == dis) {
            dis = false;
        }
        var btns = [
            'save', 'save2'
            , 'save_s', 'save_s2'
            , 'savequick', 'savequick2'
            , 'savequick_s', 'savequick_s2'
            , 'saveview', 'saveview2'
            , 'saveview_s', 'saveview_s2'
        ];

        for (var i=0;i<btns.length;i++) {
            toggleBtn(btns[i],dis);
        }
    }

    /*
     * toggle whether or not the
     * last-clicked button is disabled
     */
    function toggleBtn(btn,dis) {
        if (undefined == dis) {
            dis = false;
        }
        b=qbjq('#QueryBuilder\\:editPage\\:'+btn);
        b.attr('disabled', dis);
        if (dis) {
            b.addClass('btnDisabled')
        } else {
            b.removeClass('btnDisabled')
        }
    }

    /*
     * do a quick save
     */
    function saveClickQuick(do_unselect) {
        return saveClick(do_unselect,true);
    }

    /*
     * do a view results upon "View Query Results" click
     */
    function saveClickView() {
        return saveClick(false,true,true);
    }

    /*
     * handle a save click
     */
    function saveClick(do_unselect, is_quick, do_show) {
        if (validateFilters() && validateReport()) {
            toggleSaveBtns(true);

            if (undefined == is_quick) {
                is_quick=false;
            }

            if (undefined == do_unselect) {
                do_unselect=false;
            }

            if (undefined == do_show) {
                do_show=false;
            }

            if (do_unselect) {
                unselectRoles();
            }

            quick_save = is_quick;
            show_total = do_show;
            prepEmailFolders();

            // clear checkboxes
            var cb = document.getElementsByName('{!$Component.QueryBuilder.editPage.picklist_options}');
            for (var i = 0; i < cb.length; i++) {
                if (cb[i].type == 'checkbox') {
                    cb[i].checked = false;
                }
            }
            saveQB();
            return false;
        }
        return false;
    }

    function echoStatusAndMirror(msg) {
        var me = qbjq(this);
        var mirror = qbjq('#savestatus_mirror');

        me.css('display', 'inline');
        mirror.css('display', 'inline');
        mirror.html(msg);
    }
    </script>
    <apex:outputPanel rendered="{!IsSeekQuery}">
        <script type="text/javascript">
            qbjq(function() {
                // Disable the sorts, if the company has a neuralytics license,
                // and the seek list uses smart sort.
                checkLicense('neur',
                    function (data) {
                        if (data.message) {
                            updateSorts();
                        }
                    });
            });
        </script>
    </apex:outputPanel>
    <div class="bPageBlock bEditBlock secondaryPalette">
        <apex:form id="editPage">
            <apex:outputPanel id="pageMsgs">
            <apex:pageMessages id="pageMsgsInner"/>
            <script type="text/javascript">
                var pageMsgs  = document.getElementById('{!$Component.QueryBuilder.editPage.pageMsgsInner}');
                if (pageMsgs && pageMsgs.innerHTML != '') {
                    window.scroll(0,0);
                }
            </script>
            </apex:outputPanel>
            <apex:outputPanel id="report_container" style="display:none;" rendered="{!IsDominoInitiative}">
                <pre>encoded report folders: <apex:outputText id="encoded_folders" value="{!EncodedFolders}"/></pre>
                <pre>encoded reports: <apex:outputText id="encoded_reports" value="{!EncodedReports}"/></pre>
            </apex:outputPanel>
            <div class="pbHeader">
                <table width="100%"><tbody>
                    <tr><td>
                        <table style="border: 1px dashed red; display:none; "><tbody>
                            <tr><td>
                                <apex:outputPanel id="dq_data">
                                    <table><tbody>
                                        <tr><td>DialerInitiativeId__c:  </td><td><apex:outputField value="{!qbdialer__DialerQuery__c.qbdialer__DialerInitiativeId__c}"/></td></tr>
                                        <tr><td>sf_query_id:            </td><td><apex:outputText id="sf_query_id"                   value="{!DialerQueryId}"/></td></tr>
                                        <tr><td>sf_dialer_initiative_id:</td><td><apex:outputText id="sf_dialer_initiative_id"       value="{!DialerInitiativeId}"/></td></tr>
                                        <tr><td>sf_seek_initiative_id:  </td><td><apex:outputText id="sf_seek_initiative_id"         value="{!qbdialer__DialerQuery__c.qbdialer__SeekInitiativeId__c}"/></td></tr>
                                        <tr><td>sf_query_name:          </td><td><apex:outputText id="sf_query_name"                 value="{!QueryName}"/></td></tr>
                                        <tr><td>sf_query_limit_calls_to:</td><td><apex:outputText id="sf_query_limit_calls_to"       value="{!qbdialer__DialerQuery__c.qbdialer__LimitCallsTo__c}"/></td></tr>
                                        <tr><td>sf_query_start_time:    </td><td><apex:outputText id="sf_query_start_time"           value="{!qbdialer__DialerQuery__c.qbdialer__StartTime__c}"/></td></tr>
                                        <tr><td>sf_query_end_time:      </td><td><apex:outputText id="sf_query_end_time"             value="{!qbdialer__DialerQuery__c.qbdialer__EndTime__c}"/></td></tr>
                                        <tr><td>sf_save_error:          </td><td><apex:outputText id="sf_save_error"                 value="{!SaveError}"/></td></tr>
                                        <tr><td>sf_report_list_status:  </td><td><apex:outputText id="sf_report_list_refresh_status" value="{!ReportListRefreshStatus}"/></td></tr>
                                        <tr><td>reportid:               </td><td><apex:outputText id="sf_report_id"                  value="{!qbdialer__DialerQuery__c.qbdialer__ReportId__c}"/></td></tr>
                                        <tr><td>reportfolder:           </td><td><apex:outputText id="sf_report_folder"              value="{!qbdialer__DialerQuery__c.qbdialer__ReportFolder__c}"/></td></tr>
                                        <tr><td>reportidcolumn:         </td><td><apex:outputText id="sf_report_id_column"           value="{!qbdialer__DialerQuery__c.qbdialer__ReportIdColumn__c}"/></td></tr>
                                        <tr><td>additemsstatus:         </td><td><apex:outputText id="sf_additemsstatus"             value="{!AddItemsToListFromReportStatus}"/></td></tr>
                                        <tr><td>ObjectType:             </td><td><apex:outputText id="sf_object_type"                value="{!qbdialer__DialerQuery__c.qbdialer__ObjectType__c}"/></td></tr>
                                        <tr><td>OpportunityType:        </td><td><apex:outputText id="sf_opportunity_type"           value="{!qbdialer__DialerQuery__c.qbdialer__OpportunityType__c}"/></td></tr>
                                        <tr><td>Total Items:            </td><td><apex:outputText id="sf_total_items"                value="{!qbdialer__DialerQuery__c.qbdialer__TotalItems__c}"/></td></tr>

                                    </tbody></table>
                                </apex:outputPanel>
                            </td></tr>
                            <tr><td><pre><apex:outputText escape="false" id="built_query" value="Query: {!CurrentWhereClause}"/></pre></td></tr>
                        </tbody></table>
                    </td></tr>
                    <tr><td class="pbButtonb" align="center">
                        <apex:outputPanel rendered="{!IsDominoQuery}">
                            <apex:commandButton value=" Save " id="save"       onclick="return saveClick(true);" title=" Save "/>
                            <apex:commandButton value=" Quick Save " id="savequick" onclick="return saveClickQuick(true,true);"  title=" Quick Save " />
                            <apex:commandButton value=" View Query Results " id="saveview" onclick="return saveClickView();"  title=" View Query Results " rerender="pageMsgs" />
                            <apex:commandButton value=" Cancel "     action="{!DialerQueryCancel}"                                     title=" Cancel "     immediate="true"/>
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{!IsSeekQuery}">
                            <apex:commandButton value=" Save & Close " id="save_s"       onclick="return saveClick();" title=" Save & Close "       rerender="pageMsgs"/>
                            <apex:commandButton value=" Quick Save " id="savequick_s"         onclick="return saveClickQuick(false,true);"  title=" Quick Save "         rerender="pageMsgs" rendered="{!IsQuickSaveable}"/>
                            <apex:commandButton value=" View Query Results " id="saveview_s" onclick="return saveClickView();"  title=" View Query Results " rerender="pageMsgs" rendered="{!IsQuickSaveable}"/>
                            <apex:commandButton value=" Cancel "             onclick="top.window.close();return false;"        title=" Cancel "/>
                        </apex:outputPanel>
                        <apex:actionFunction name="saveQB" action="{!saveQB}" status="querySaveStatus" rerender="dq_data,bool_filter_error,pageMsgs" oncomplete="sendSyncRequest()">
                            <apex:param name="selected_field" value=""/>
                        </apex:actionFunction>
                        <apex:actionFunction name="sendSyncRequest" action="{!sendSyncRequest}" rerender="pageMsgs" oncomplete="checkSaveStatus()" />

                        <apex:actionFunction name="fetchOrgHost" action="{!getConfigHost}" status="querySaveStatus" rerender="dq_data,bool_filter_error,pageMsgs" oncomplete="checkSaveStatus()">
                            <apex:param name="selected_field" value=""/>
                        </apex:actionFunction>

                        <apex:actionFunction name="saveSelectedQBRoles" action="{!saveSelectedQBRoles}" status="roleSaveStatus" rerender="dq_data" oncomplete="emptyList()">
                            <apex:param name="roles" value=""/>
                        </apex:actionFunction>
                        <apex:actionfunction name="emptyList"                    action="{!emptyList}"                    status="emptyListStatus"          oncomplete="addItemsToListByDataSource()"/>
                        <apex:actionfunction name="addItemsToList"               action="{!addItemsToList}"               status="addItemsStatus"           oncomplete="addItemsComplete()" rerender="pageMsgs,add_item_count,built_query,dq_data"/>
                        <apex:actionfunction name="addItemsToListFromReportInit" action="{!addItemsToListFromReportInit}" status="addItemsFromReportStatus" oncomplete="checkAddItemsToListFromReportStatus()">
                            <apex:param name="ReportId" value=""/>
                            <apex:param name="ReportIdColumn" value=""/>
                        </apex:actionfunction>
                        <apex:actionfunction name="addItemsToListFromReportUpdateStatus" action="{!addItemsToListFromReportUpdateStatus}" status="addItemsFromReportUpdateStatus"  oncomplete="checkAddItemsToListFromReportStatus()" rerender="dq_data">
                            <apex:param name="ReportId" value=""/>
                            <apex:param name="ReportIdColumn" value=""/>
                        </apex:actionfunction>
                        <apex:actionfunction name="initRefreshList" action="{!initReportRefresh}" status="checkRefreshStatus_status" oncomplete="updateReportListRefreshStatus();" rerender="dq_data"/>
                        <apex:actionfunction name="fetchReports"    action="{!fetchReports}" status="fetchReportStatus" oncomplete="fetchedReports()" rerender="report_container"/>
                        <apex:actionfunction name="updateReportListRefreshStatus" action="{!updateReportListRefreshStatus}" oncomplete="checkRefreshStatusComplete();" rerender="dq_data"/>
                        <apex:actionFunction name="reloadSeekInitiative" action="{!reloadSeekInitiative}" oncomplete=""/>
                    </td></tr>
                    <tr><td class="pbTitle" align="center">
                                                <apex:actionStatus id="querySaveStatus"
                            onstart="echoStatusAndMirror('...saving query...')"
                            startText="...saving query..."
                            stopText=""
                            startStyle="font-weight:bold;font-style:italic;"
                            stopStyle="display:none;"/>
                        <apex:actionStatus id="roleSaveStatus"
                            onstart="echoStatusAndMirror('...saving roles...')"
                            startText="...saving roles..."
                            stopText=""
                            startStyle="font-weight:bold;font-style:italic;"
                            stopStyle="font-weight:bold;font-style:italic;display:none;"/>
                        <apex:actionStatus id="addItemsStatus"
                            onstart="echoStatusAndMirror('...adding items to list...')"
                            onstop="echoStatusAndMirror('...save complete...')"
                            startText="...adding items to list..."
                            stopText="...save complete..."
                            startStyle="font-weight:bold;font-style:italic;"
                            stopStyle="font-weight:bold;font-style:italic;display:none;"/>
                        <apex:actionStatus id="addItemsFromReportStatus"
                            onstart="echoStatusAndMirror('...adding items to list...')"
                            onstop="echoStatusAndMirror('...adding items to list...')"
                            startText="...adding items to list..."
                            stopText="...adding items to list..."
                            startStyle="font-weight:bold;font-style:italic;"
                            stopStyle="font-weight:bold;font-style:italic;display:none;"/>
                        <apex:actionStatus id="emptyListStatus"
                            onstart="echoStatusAndMirror('...removing items from list...')"
                            onstop="this.style.display='none';"
                            startText="...removing items from list..."
                            stopText="...list empty..."
                            startStyle="font-weight:bold;font-style:italic;"
                            stopStyle="font-weight:bold;font-style:italic;display:none;"/>
                        <apex:outputPanel layout="block" id="add_item_count" style="display:none">Total Items Added: {!qbdialer__DialerQuery__c.qbdialer__TotalItems__c}</apex:outputPanel>
                    </td></tr>
                </tbody></table>
            </div>

            <div id="qb_filter_error" style="display: none;" class="message errorM3">
                <table border="0" cellpadding="0" cellspacing="0" class="messageTable" style="padding:0px;margin:0px;">
                    <tbody>
                        <tr valign="top">
                            <td>
                                <img alt="ERROR" class="msgIcon" src="/s.gif" title="ERROR" />
                            </td>
                            <td class="messageCell">
                                <div id="" class="messageText">
                                    <span id="" style="color:#cc0000"><h4>Error:</h4></span>There are problems with your filters.<br />
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td></td><td></td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <div class="pbBody">
                <div class="pbSubblock">
                    <div class="pbSubheader first tertiaryPalette">
                        <span class="pbSubExtra">
                            <span class="requiredLegend">
                                <span class="requiredExampleOuter"><span class="requiredExample">&nbsp;</span></span>
                                <span class="requiredText"> = Required Information</span>
                            </span>
                        </span>
                        <h3>Enter&nbsp;Query&nbsp;Name<apex:outputPanel rendered="{!IsDominoQuery}">&nbsp;and&nbsp;Data&nbsp;Source</apex:outputPanel></h3>
                    </div>
                    <div class="pbSubbody">
                        <table><tbody>
                            <tr>
                                <td class="labelCol requiredInput"><label>Query Name:</label></td>
                                <td class="dataCol">
                                    <div class="requiredInput">
                                        <div class="requiredBlock"></div>
                                        <apex:inputField id="query_name" value="{!qbdialer__DialerQuery__c.name}" required="true" style="{!QueryNameStyle}"/>
                                        <div class="errorMsg" style="display:none" id="QueryBuilder:editPage:query_name_error"><strong>Error:</strong> You must enter a value</div>
                                    </div>
                                </td>
                                <td class="labelCol requiredInput">
                                <apex:outputPanel rendered="{!IsDominoQuery}">
                                    <label>Dialer Panel:</label>
                                </apex:outputPanel>
                                </td>
                                <td class="dataCol" style="white-space: nowrap;">
                                <apex:outputPanel rendered="{!IsDominoQuery}">
                                    <div class="requiredInput">
                                        <div class="requiredBlock"></div>
                                        <span id="dialer_panel_span">
                                            <apex:selectList id="default_dialer_panel_id" size="1" title="Dialer_Panel" value="{!DefaultDialerPanel}">
                                                <apex:selectOptions value="{!DialerPanelOptions}"/>
                                            </apex:selectList>
                                        </span>
                                    </div>
                                </apex:outputPanel>
                                </td>
                            </tr>							
                            <tr>
                                <apex:outputPanel rendered="{!IsDominoQuery}">
                                <td class="labelCol requiredInput" style="visibility:{!if(ShowReportOption, 'visible', 'hidden')}">
                                    <label>Data Source:</label>
                                </td>
                                <td class="dataCol" style="visibility:{!if(ShowReportOption, 'visible', 'hidden')}">
                                    <div class="requiredInput">
                                        <div class="requiredBlock"></div>
                                        <apex:selectRadio id="data_source" value="{!qbdialer__DialerQuery__c.qbdialer__DataSource__c}" onclick="updateDataSourceDisplay(this.value)">
                                            <apex:selectOptions value="{!AvailableDataSources}"></apex:selectOptions>
                                        </apex:selectRadio>
                                    </div>
                                </td>
                                </apex:outputPanel>
                                <td class="labelCol" style="white-space: nowrap; padding-left: 70px"><label>Call 800 Numbers:</label></td>
                                <td class="dataCol" style="width:100%;"><apex:inputField value="{!qbdialer__DialerQuery__c.qbdialer__EightHundred__c}"/></td> 
                            </tr>
                        </tbody></table>
                    </div>
                </div>
                <apex:outputPanel id="report_panel" rendered="{!IsDominoInitiative}">
                    <div class="pbSubblock">
                        <div class="pbSubheader first tertiaryPalette"><h3>Select Report</h3></div>
                        <div class="pbSubbody">
                            <table cellpadding="2" cellspacing="2"><tbody>
                                <tr>
                                    <td colspan="3" style="width:700px">
                                        Reports must be in a public folder and contain at least one column containing the record ID.
                                        Opportunity lists must contain an ID column for both the Contact ID and the Opportunity ID.
                                        If you have recently changed a report that has previously been used to create a Domino List,
                                        <a href="javascript:refreshReports();">click here to update the report.</a>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="labelCol" nowrap="true" style="width:142px"><label>Report Folder:</label></td>
                                    <td class="dataCol" nowrap="true">
                                        <span style="display:none">
                                            <apex:inputField id="reportfolder" value="{!qbdialer__DialerQuery__c.qbdialer__ReportFolder__c}"/>
                                        </span>
                                        <div class="requiredInput">
                                            <div class="requiredBlock"></div>
                                            <select id="QueryBuilder:editPage:reportfolder_src" onchange="reportFolderChanged()" class="report_select">
                                                <option value="">Unfiled Public Reports</option>
                                            </select>
                                            <apex:actionfunction name="updateReportFolder"
                                                oncomplete="reportFoldersUpdated()"
                                                action="{!updateReportFolder}"
                                                rerender="reportid_src"/>
                                        </div>
                                    </td>
                                    <td style="width:160px; display:none;">
                                        <span style="display:none" id="QueryBuilder:refresh_span">
                                        <apex:actionStatus id="checkRefreshStatus_status"
                                            onstart="this.style.display=''"
                                            startText=" . . . refreshing report list . . . "
                                            stopText=" . . . refreshing report list"
                                            startStyle="font-weight:bold;font-style:italic;"
                                            stopStyle="font-weight:bold;font-style:italic;"/>
                                        </span>
                                        <span style="display:none" id="QueryBuilder:fetch_span">
                                        <apex:actionStatus id="fetchReportStatus"
                                            onstart="this.style.display=''"
                                            startText=" . . . retrieving report list . . . "
                                            stopText=" . . . retrieving report list"
                                            startStyle="font-weight:bold;font-style:italic;"
                                            stopStyle=""/>
                                        </span>
                                        <input id="QueryBuilder:refresh_button" type="button" class="btn" onclick="this.style.display='none';document.getElementById('QueryBuilder:refresh_span').style.display='';refreshReports()" value="Clear Report Object Data" />
                                        <input id="QueryBuilder:refresh_button:use_cache" name="QueryBuilder:refresh_button:use_cache" type="hidden" value="false" />
                                        <input id="QueryBuilder:refresh_button:clear_cache" name="QueryBuilder:refresh_button:clear_cache" type="hidden" value="true" />
                                    </td>
                                </tr>
                                <tr>
                                    <td class="labelCol" nowrap="true"><label>Report:</label></td>
                                    <td class="dataCol" nowrap="true">
                                        <span style="display:none"><apex:inputField id="reportid" value="{!qbdialer__DialerQuery__c.qbdialer__ReportId__c}"/> <apex:inputField id="reportname" value="{!qbdialer__DialerQuery__c.qbdialer__ReportName__c}"/></span>
                                        <div class="requiredInput">
                                            <div class="requiredBlock"></div>
                                            <apex:actionRegion >
                                                <apex:selectList id="reportid_src" size="1" value="{!qbdialer__DialerQuery__c.qbdialer__ReportName__c}" onchange="updateReportObjectOptions();document.getElementById('{!$Component.QueryBuilder.editPage.reportid}').value = this.value;document.getElementById('{!$Component.QueryBuilder.editPage.reportname}').value = this.options[this.selectedIndex].text;" styleClass="report_select">
                                                    <apex:selectOptions value="{!ReportList}"/>
                                                </apex:selectList>
                                                <span id="loading_report_span" style="display:none">
                                                    &nbsp;<img src="{!URLFOR($Resource.c2c_resources, '/img/loading.gif')}" style="vertical-align: top; margin-right: 8px;" />
                                                    Loading Report...
                                                </span>
                                                <div class="errorMsg" style="display:none" id="loaded_invalid_report_span">
                                                    &nbsp;<strong>Error:</strong> Invalid Report
                                                    <img src="{!URLFOR($Resource.c2c_resources, '/img/help_icon_white_square.png')}" style="vertical-align: top; margin-right: 8px;"
                                                        title="This report does not contain a column for record ID. Add a column for record ID to the report and try again." />
                                                </div>
                                            </apex:actionRegion>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="labelCol" nowrap="true"><label>Report Object to Use:</label></td>
                                    <td class="dataCol" nowrap="true">
                                        <div class="requiredInput">
                                            <div class="requiredBlock"></div>
                                            <span style="display:none"><apex:inputField id="reportidcolumn" value="{!qbdialer__DialerQuery__c.qbdialer__ReportIdColumn__c}"/></span>
                                            <select  id="{!$Component.QueryBuilder.editPage.reportidcolumn}_src" onchange="document.getElementById('{!$Component.QueryBuilder.editPage.reportidcolumn}').value = this.value" class="report_select">
                                            <option value="{!qbdialer__DialerQuery__c.qbdialer__ReportIdColumn__c}">{!qbdialer__DialerQuery__c.qbdialer__ReportIdColumn__c}</option>
                                            </select>
                                        </div>
                                    </td>
                                </tr>
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel id="neuralytics_panel" rendered="{!IsDominoQuery}" style="display: none">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Neuralytics<sup><apex:outputText value="&reg;" escape="false" /></sup></h3></div>
                        <div class="pbSubbody">
                            <table border="0" cellSpacing="0" cellPadding="0" width="100%" style="height:45px;"><tbody>
                                <tr>
                                    <td class="dataCol">
                                        <div>
                                            <p style="font-style:italic; margin-top:0; margin-bottom:1em;">
                                            Neural Sort is a predictive system helping you know who to call and when to call.
                                            Using complex learning algorithms Neural Sort will use the data already in your system to determine which of your records are most likely to contact and sort them accordingly.
                                            </p>
                                            <table cellpadding="2" cellspacing="2"><tbody>
                                                <tr>
                                                    <td class="labelCol" >
                                                        <label>Neural Sort:</label>
                                                    </td>
                                                    <td class="dataCol">
                                                        <apex:selectList id="neuralytics_sort" size="1" title="Neural Sort" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__SmartSort__c}">
                                                            <apex:selectOption itemLabel="On"  itemValue="On"/>
                                                            <apex:selectOption itemLabel="Off" itemValue="Off"/>
                                                        </apex:selectList>
                                                    </td>
                                                </tr>
                                            </tbody>
                                            </table>
                                        </div>
                                    </td>
                                </tr>
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel id="object_type_panel">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Object Type</h3></div>
                        <div class="pbSubbody">
                            <table border="0" cellSpacing="0" cellPadding="0" width="100%" style="height:45px;"><tbody>
                                <tr>
                                    <td class="dataCol">
                                        <div>
                                            <script type="text/javascript">
                                                function setObjectType(){
                                                    setTemporaryName();
                                                    updateObjectType(document.getElementById('{!$Component.QueryBuilder.editPage.object_type}').value);
                                                }
                                                function postObjectTypeChange(){
                                                                for(i=1 ;i<=10; i++) {
                                                                        setFilterObjectType(i);
                                                                        buildFieldTypeMap(i);
                                                                        updateOperator(i);
                                                                        resetValue(i);
                                                                }
                                                    unsetTemporaryName();
                                                                toggleSaveBtns(false);

                                                    checkLicense('neur',
                                                        function (data) {
                                                            if (data.message) {
                                                                updateSorts();
                                                            }
                                                        });
                                                }

                                                    function setFilterObjectType(i){
                                                        setTemporaryName();
                                                        document.getElementById('QueryBuilder:editPage:fcol'+i).disabled = true;
                                                        document.getElementById('QueryBuilder:editPage:fop'+i).disabled = true;
                                                        document.getElementById('QueryBuilder:editPage:fval'+i).disabled = true;
                                                        window['updateFilterObjectType'+i](document.getElementById('QueryBuilder:editPage:fobj'+i).value);
                                                    }
                                                    function enableFilterRow(i){
                                                        unsetTemporaryName();
                                                        document.getElementById('QueryBuilder:editPage:fcol'+i).disabled = false;
                                                        document.getElementById('QueryBuilder:editPage:fop'+i).disabled = false;
                                                        document.getElementById('QueryBuilder:editPage:fval'+i).disabled = false;
                                                        buildFieldTypeMap(i);
                                                        updateOperator(i);
                                                        resetValue(i);
                                                    }
                                                    function objectLimitCallsToByAccount() {
                                                        if ({!IsAccountTeamsEnabled}) {
                                                            var objectTypes = document.getElementById('{!$Component.QueryBuilder.editPage.object_type}');
                                                            var objectIndex = objectTypes.selectedIndex;
                                                            var objectValue = objectTypes[objectIndex].value;

                                                            if(objectValue == "Account") {
                                                                enableAccountTeamOption();
                                                            } else if(objectValue == "Opportunity") {
                                                                var opportunityTypes = document.getElementById('{!$Component.QueryBuilder.editPage.opportunity_type}');
                                                                var opportunityIndex = opportunityTypes.selectedIndex;
                                                                var opportunityValue = opportunityTypes[opportunityIndex].value;

                                                                if(opportunityValue == "Opportunity_Account") {
                                                                    enableAccountTeamOption();
                                                                } else {
                                                                    disableAccountTeamOption();
                                                                }
                                                            } else if(objectValue == "Case") {
                                                                var caseTypes = document.getElementById('{!$Component.QueryBuilder.editPage.case_type}');
                                                                var caseIndex = caseTypes.selectedIndex;
                                                                var caseValue = caseTypes[caseIndex].value;

                                                                if(caseValue == "Case_Account") {
                                                                    enableAccountTeamOption();
                                                                } else {
                                                                    disableAccountTeamOption();
                                                                }
                                                            } else {
                                                                disableAccountTeamOption();
                                                            }
                                                        }
                                                    }
                                            </script>
                                            <apex:selectList id="object_type" size="1" title="Object Type" onchange="preObjectTypeChange();setObjectType();objectLimitCallsToByAccount();" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__ObjectType__c}">
                                                <apex:selectOption itemLabel="Lead"    itemValue="Lead"/>
                                                <apex:selectOption itemLabel="Contact" itemValue="Contact"/>
                                                <apex:selectOption itemLabel="Account" itemValue="Account"/>
                                                <apex:selectOption itemLabel="Task" itemValue="Task" rendered="{!IsDominoQuery}"/>
                                                <apex:selectOption itemLabel="Opportunity" itemValue="Opportunity"/>
                                                <apex:selectOption itemLabel="Case" itemValue="Case"/>
                                            </apex:selectList>
                                            <div id="case_type_select" style="display: inline">
                                                <apex:selectList id="case_type" size="1" title="Case Type" onchange="objectLimitCallsToByAccount();" value="{!qbdialer__DialerQuery__c.qbdialer__CaseType__c}">
                                                    <apex:selectOption itemLabel="Account" itemValue="Case_Account"/>
                                                    <apex:selectOption itemLabel="Contact" itemValue="Case_Contact"/>
                                                </apex:selectList>
                                                <span>Lists based on cases will display one of two objects in the dialer--the case's related account or contact. Choose which object you would like to appear.</span>
                                            </div>
                                            <div id="opportunity_type_select" style="display: inline">
                                                <apex:selectList id="opportunity_type" size="1" title="Opportunity Type" onchange="objectLimitCallsToByAccount();" value="{!qbdialer__DialerQuery__c.qbdialer__OpportunityType__c}">
                                                    <apex:selectOption itemLabel="Account" itemValue="Opportunity_Account"/>
                                                    <apex:selectOption itemLabel="Contact" itemValue="Opportunity_Contact"/>
                                                </apex:selectList>
                                                <span>Lists based on opportunities will display one of two objects in the dialer--the opportunity's linked account, or the opportunity contact roles. Choose which object you would like to appear.</span>
                                            </div>
                                            <div>
                                                <apex:actionfunction name="updateObjectType"
                                                        action="{!updateObjectType}"
                                                        status="updateObjectTypeStatus"
                                                        oncomplete="postObjectTypeChange()"
                                                        rerender="dq_data,
                                                        fobj1,fcol1,
                                                        fobj2,fcol2,
                                                        fobj3,fcol3,
                                                        fobj4,fcol4,
                                                        fobj5,fcol5,
                                                        fobj6,fcol6,
                                                        fobj7,fcol7,
                                                        fobj8,fcol8,
                                                        fobj9,fcol9,
                                                        fobj10,fcol10,
                                                        sort1,sort2,sort3,scol1,scol2,scol3">
                                                        <apex:param name="object_type" value=""/>
                                                </apex:actionFunction>
                                                <apex:actionStatus id="updateObjectTypeStatus"
                                                        onstart="this.style.display=''"
                                                        onstop="setTimeout('document.getElementById(\'updateObjectTypeStatus.stop\').style.display=\'none\'', 3000)"
                                                        startText="...updating data for filter fields..."
                                                        stopText="...update complete..."
                                                        startStyle="font-weight:bold;font-style:italic;"
                                                        stopStyle="font-weight:bold;font-style:italic;display:none;"/>
                                                <apex:actionfunction name="updateFilterObjectType1"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(1)"
                                                        rerender="fcol1,fop1,fval1,field_type_list1">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="1"/>
                                                </apex:actionFunction>
                                                <apex:actionfunction name="updateFilterObjectType2"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(2)"
                                                        rerender="fcol2,fop2,fval2,field_type_list2">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="2"/>
                                                </apex:actionFunction>
                                                <apex:actionfunction name="updateFilterObjectType3"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(3)"
                                                        rerender="fcol3,fop3,fval3,field_type_list3">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="3"/>
                                                </apex:actionFunction>
                                                <apex:actionfunction name="updateFilterObjectType4"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(4)"
                                                        rerender="fcol4,fop4,fval4,field_type_list4">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="4"/>
                                                </apex:actionFunction>
                                                <apex:actionfunction name="updateFilterObjectType5"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(5)"
                                                        rerender="fcol5,fop5,fval5,field_type_list5">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="5"/>
                                                </apex:actionFunction>
                                                <apex:actionfunction name="updateFilterObjectType6"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(6)"
                                                        rerender="fcol6,fop6,fval6,field_type_list6">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="6"/>
                                                </apex:actionFunction>
                                                <apex:actionfunction name="updateFilterObjectType7"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(7)"
                                                        rerender="fcol7,fop7,fval7,field_type_list7">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="7"/>
                                                </apex:actionFunction>
                                                <apex:actionfunction name="updateFilterObjectType8"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(8)"
                                                        rerender="fcol8,fop8,fval8,field_type_list8">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="8"/>
                                                </apex:actionFunction>
                                                <apex:actionfunction name="updateFilterObjectType9"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(9)"
                                                        rerender="fcol9,fop9,fval9,field_type_list9">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="9"/>
                                                </apex:actionFunction>
                                                <apex:actionfunction name="updateFilterObjectType10"
                                                        action="{!updateFilterObjectType}"
                                                        oncomplete="enableFilterRow(10)"
                                                        rerender="fcol10,fop10,fval10,field_type_list10">
                                                        <apex:param name="filter_object_type" value=""/>
                                                        <apex:param name="filter_object_index" value="10"/>
                                                </apex:actionFunction>
                                        </div>
                                        </div>
                                    </td>
                                </tr>
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel id="email_settings_panel" rendered="{!IsDominoQuery}">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Email Settings</h3></div>
                        <div class="pbSubbody">
                            <table border="0" cellSpacing="0" cellPadding="0" width="100%"><tbody>
                                <tr><td class="dataCol">
                                    <div>
                                    <apex:selectRadio id="use_salesforce_templates" layout="pageDirection" value="{!qbdialer__DialerQuery__c.qbdialer__UseSalesforceEmailTemplates__c}" onclick="toggleEmailFolders();">
                                        <apex:selectOption id="use_salesforce_email_templates"     itemValue="true"     itemLabel="Use Salesforce Email Templates"/>
                                        <apex:selectOption id="use_insidesales_email_templates"    itemValue="false"    itemLabel="Use InsideSales.com Email Templates"/>
                                    </apex:selectRadio>
                                    <br />

                                    <div style="float: left; text-align: center;">
                                        <span style="font-weight: bold">Available Email Folders</span><br />
                                        <div style="position:absolute"><div id="loading_folders" style="text-align:left;position:relative; top: 10px; left: 10px; display:none;"><img src="https://qbdialer.na6.visual.force.com/img/loading.gif"/> Loading Folders...</div></div>
                                        <select multiple="true" size="10" id="QueryBuilder:editPage:availableEmailFolders" style="width: 200px; height: 150px;">
                                        </select>
                                    </div>

                                    <div style="float: left; text-align: center; width: 100px;">
                                    <br /><br /><br />
                                    Add<br />
                                    <img src="/s.gif" alt="Add"  onclick="move_email_folders_right();"  class="picklistArrowRight" />
                                    <br /><br />
                                    <img src="/s.gif" alt="Remove" onclick="move_email_folders_left();" class="picklistArrowLeft" />
                                    <br />
                                    Remove
                                    </div>
                                    <div style="float: left; text-align: center;">
                                    <span style="font-weight: bold">Selected Email Folders</span><br />
                                    <select id="QueryBuilder:editPage:emailFolders" multiple="true" size="8" style="width: 200px; height: 150px;">
                                    </select>
                                    <apex:inputHidden id="emailFolderSelected"/>
                                    <apex:outputText value="{!qbdialer__DialerQuery__c.qbdialer__EmailFolders__c}" rendered="false" />
                                    </div>
                                    </div>
                                </td></tr>
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel id="permissions_panel" rendered="{!IsDominoQuery}">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Dialer Settings</h3></div>
                        <table>
                            <tr id="ring_timeout">
                                <td><strong>Ring Time-Out:</strong></td>
                                <td><apex:inputField value="{!qbdialer__DialerQuery__c.qbdialer__RingTimeout__c}" id="ring_timeout_apex"/><i>(secs)</i></td>
                            </tr>
                            <!--
                            <tr>
                                <td><strong>Limit Calls To:</strong></td>

                            </tr>
                            -->
                            <tr id="local_presence_row">
                                <td>
                                    <div style="display:{!IF(IsDominoQuery,'block','none')}">
                                        <table id="local_presence_table" style="display: none">
                                        <tbody>
                                            <tr style="" id="local_presence_row">
                                                <td class="labelCol requiredInput"><label>Use Local Presence:</label></td>
                                                <td class="dataCol"><apex:inputField id="use_local_presence" value="{!qbdialer__DialerQuery__c.qbdialer__Use_Local_Presence__c}" onclick="toggleLocalPresence(document.getElementById('local_presence_panel').style.display);"/></td>
                                            </tr>
                                            <tr id="local_presence_panel" class="local_presence_panel" style="{!IF(Use_Local_Presence, '', 'display:none')}">
                                                <td class="labelCol">Local Presence Block</td>
                                                <td class="dataCol">
                                                    <select id="local_presence_block_select" onchange="qbjq('.bucket_id').val(qbjq(this).val());"></select>
                                                    <span style="display: none;"><apex:inputField id="bucket_id" styleclass="bucket_id" value="{!qbdialer__DialerQuery__c.qbdialer__Local_Presence_Bucket__c}" /></span>
                                                </td>
                                            </tr>
                                            <tr id="local_presence_panel" class="local_presence_panel" style="{!IF(Use_Local_Presence, '', 'display: none')}">
                                                <td class="labelCol">Test Against Regular Numbers: </td>
                                                <td class="dataCol"><apex:inputField id="test_local_presence" value="{!qbdialer__DialerQuery__c.qbdialer__Test_Local_Presence__c}" /></td>
                                            </tr>
                                        </tbody>
                                        </table>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel id="filter_panel">
                <div class="pbSubblock">
                    <div class="pbSubheader tertiaryPalette"><h3>Specify Filter Criteria</h3></div>
                    <div class="pbSubbody">
                        <table cellpadding="2" cellspacing="2"><tbody>
                        <apex:outputPanel rendered="{!SeekQueryNotHasCallingTimeLimit}">
                            <tr>
                                <td><strong>Limit Calling Times:</strong></td>
                                <td class="dataCol" valign="top" style="">



                                    <apex:inputCheckbox id="LimitCallingTimes" value="{!qbdialer__DialerQuery__c.qbdialer__LimitCallingTimes__c}" onclick="toggleCallingTimes(this.checked)"/>
                                    <apex:selectList id="call_start_time" size="1" disabled="{!IF(!LimitCallingTimes,'true','false')}" title="Call Start Time" value="{!qbdialer__DialerQuery__c.qbdialer__LimitStartTime__c}">
                                        <apex:selectOption itemLabel="12am" itemValue="00:00"/>
                                        <apex:selectOption itemLabel="1am"  itemValue="01:00"/>
                                        <apex:selectOption itemLabel="2am"  itemValue="02:00"/>
                                        <apex:selectOption itemLabel="3am"  itemValue="03:00"/>
                                        <apex:selectOption itemLabel="4am"  itemValue="04:00"/>
                                        <apex:selectOption itemLabel="5am"  itemValue="05:00"/>
                                        <apex:selectOption itemLabel="6am"  itemValue="06:00"/>
                                        <apex:selectOption itemLabel="7am"  itemValue="07:00"/>
                                        <apex:selectOption itemLabel="8am"  itemValue="08:00"/>
                                        <apex:selectOption itemLabel="9am"  itemValue="09:00"/>
                                        <apex:selectOption itemLabel="10am" itemValue="10:00"/>
                                        <apex:selectOption itemLabel="11am" itemValue="11:00"/>
                                        <apex:selectOption itemLabel="12pm" itemValue="12:00"/>
                                        <apex:selectOption itemLabel="1pm"  itemValue="13:00"/>
                                        <apex:selectOption itemLabel="2pm"  itemValue="14:00"/>
                                        <apex:selectOption itemLabel="3pm"  itemValue="15:00"/>
                                        <apex:selectOption itemLabel="4pm"  itemValue="16:00"/>
                                        <apex:selectOption itemLabel="5pm"  itemValue="17:00"/>
                                        <apex:selectOption itemLabel="6pm"  itemValue="18:00"/>
                                        <apex:selectOption itemLabel="7pm"  itemValue="19:00"/>
                                        <apex:selectOption itemLabel="8pm"  itemValue="20:00"/>
                                        <apex:selectOption itemLabel="9pm"  itemValue="21:00"/>
                                        <apex:selectOption itemLabel="10pm" itemValue="22:00"/>
                                        <apex:selectOption itemLabel="11pm" itemValue="23:00"/>
                                    </apex:selectList>
                                    <apex:selectList id="call_end_time" size="1"  disabled="{!IF(!LimitCallingTimes,'true','false')}" title="Call End Time" value="{!qbdialer__DialerQuery__c.qbdialer__LimitEndTime__c}">
                                        <apex:selectOption itemLabel="12am" itemValue="00:00"/>
                                        <apex:selectOption itemLabel="1am"  itemValue="01:00"/>
                                        <apex:selectOption itemLabel="2am"  itemValue="02:00"/>
                                        <apex:selectOption itemLabel="3am"  itemValue="03:00"/>
                                        <apex:selectOption itemLabel="4am"  itemValue="04:00"/>
                                        <apex:selectOption itemLabel="5am"  itemValue="05:00"/>
                                        <apex:selectOption itemLabel="6am"  itemValue="06:00"/>
                                        <apex:selectOption itemLabel="7am"  itemValue="07:00"/>
                                        <apex:selectOption itemLabel="8am"  itemValue="08:00"/>
                                        <apex:selectOption itemLabel="9am"  itemValue="09:00"/>
                                        <apex:selectOption itemLabel="10am" itemValue="10:00"/>
                                        <apex:selectOption itemLabel="11am" itemValue="11:00"/>
                                        <apex:selectOption itemLabel="12pm" itemValue="12:00"/>
                                        <apex:selectOption itemLabel="1pm"  itemValue="13:00"/>
                                        <apex:selectOption itemLabel="2pm"  itemValue="14:00"/>
                                        <apex:selectOption itemLabel="3pm"  itemValue="15:00"/>
                                        <apex:selectOption itemLabel="4pm"  itemValue="16:00"/>
                                        <apex:selectOption itemLabel="5pm"  itemValue="17:00"/>
                                        <apex:selectOption itemLabel="6pm"  itemValue="18:00"/>
                                        <apex:selectOption itemLabel="7pm"  itemValue="19:00"/>
                                        <apex:selectOption itemLabel="8pm"  itemValue="20:00"/>
                                        <apex:selectOption itemLabel="9pm"  itemValue="21:00"/>
                                        <apex:selectOption itemLabel="10pm" itemValue="22:00"/>
                                        <apex:selectOption itemLabel="11pm" itemValue="23:00"/>
                                    </apex:selectList>
                                    &nbsp;<i>(Times based on the area code of the person's <br /> phone number.  This is not 100% accurate since there are some area codes that span multiple time zones.)</i>


                                </td>
                            </tr>
                             </apex:outputPanel>
                             <script type="text/javascript">
                                function enableAccountTeamOption() {
                                    var limitCallsToSelect = document.getElementById('{!$Component.QueryBuilder.editPage.limit_calls_to}');                                   
                                    var found = findAccountTeams();
                                        if(!found) {
                                            var accountTeamOption = document.createElement("option");
                                            accountTeamOption.text = "Account Team";
                                            accountTeamOption.value = 'account_teams';
                                            limitCallsToSelect.add(accountTeamOption);
                                    }
                                }
                                function disableAccountTeamOption() {
                                    var limitCallsToSelect = document.getElementById('{!$Component.QueryBuilder.editPage.limit_calls_to}');
                                    var found = findAccountTeams();
                                    for(var i = 0; i < limitCallsToSelect.length; i++) {
                                        if(limitCallsToSelect.options[i].value == 'account_teams') {
                                            limitCallsToSelect.remove(i);
                                            limitCallsToSelect.selectedIndex = 0; //Index of Default Value which is No Limit
                                        }
                                    }
                                }
                                function findAccountTeams() {
                                   var limitCallsToSelect = document.getElementById('{!$Component.QueryBuilder.editPage.limit_calls_to}');
                                   var found = false;
                                   for(var i = 0; i < limitCallsToSelect.length; i++) {
                                       if(limitCallsToSelect.options[i].value == 'account_teams') {
                                           found = true;
                                       }
                                   }
                                    return found;
                                }
                                function checkOnlyDialOwn() {
                                    var limitCallsToSelect = document.getElementById('{!$Component.QueryBuilder.editPage.limit_calls_to}');
                                    var onlyDialOwn = "{!qbdialer__DialerQuery__c.qbdialer__OnlyDialOwn__c}";
                                    var checkLimitCallsToValue = "{!qbdialer__DialerQuery__c.qbdialer__LimitCallsTo__c}";

                                     if(onlyDialOwn == 'true')
                                     {
                                         qbjq('#limit_calls_to').val('owner');
                                     }
                                }
                             </script>
                            <apex:outputPanel >
                                <tr id="limit_calls_to">
                                    <td><strong>Limit Calls To:</strong></td>
                                    <td class="dataCol">
                                        <apex:selectList id="limit_calls_to" size="1" title="limit_calls_to" value="{!calls_to_limit}">
                                            <apex:selectOptions value="{!LimitCallsToOptions}"/>                                             
                                        </apex:selectList>
                                    </td>                                    
                                </tr>
                            </apex:outputPanel>
                            <tr>
                                <td><strong>Time Zones:</strong></td>
                                <td><apex:inputField value="{!qbdialer__DialerQuery__c.qbdialer__TimeZones__c}"/></td>
                            </tr>
                            <apex:outputPanel rendered="{!IsDominoQuery}"><tr id="minutes_between_calls" style="display:{!IF(ShowDialFilters,'','none')};">
                                <td><strong>Minutes between Calls:</strong></td>
                                <td>
                                    <apex:inputField value="{!qbdialer__DialerQuery__c.qbdialer__MinutesBetweenCalls__c}" id="minutes_between_calls_apex"/>
                                    <i>(leave blank for no filter)</i>
                                </td>
                            </tr></apex:outputPanel>
                            <tr id="dials_min" style="display:{!IF(ShowDialFilters,'','none')};">
                                <td><strong>Number of Dials is at least:</strong></td>
                                <td>
                                    <apex:inputField value="{!qbdialer__DialerQuery__c.qbdialer__MinDials__c}" id="dials_min_apex"/>
                                    <i>(leave blank for no filter)</i>
                                </td>
                            </tr>
                            <tr id="dials_max" style="display:{!IF(ShowDialFilters,'','none')};">
                                <td><strong>Number of Dials is at most:</strong></td>
                                <td>
                                    <apex:inputField value="{!qbdialer__DialerQuery__c.qbdialer__MaxDials__c}" id="dials_max_apex"/>
                                    <i>(leave blank for no filter)</i>
                                </td>
                            </tr>
                        </tbody></table>
                        <table border="0" cellspacing="0" cellpadding="0" width="50%"><tbody>
                            <tr>
                                <td nowrap="nowrap" width="25%">
                                    <strong>Filter By Owner:</strong><br />
                                    <table><tbody>
                                        <tr valign="baseline">
                                            <td>
                                                <apex:selectRadio id="ownership_filter" layout="pageDirection" value="{!qbdialer__DialerQuery__c.qbdialer__OwnershipFilter__c}" style="display:inline">
                                                    <apex:selectOption id="all"   itemValue="all"   itemLabel="All"/>
                                                    <apex:selectOption id="queue" itemValue="queue" itemLabel="Owned by Queue:"/>
                                                </apex:selectRadio>
                                            </td>
                                            <td valign="baseline" style="vertical-align:bottom">

                                                <apex:inputHidden id="QueueOwnership_lkid" value="{!qbdialer__DialerQuery__c.qbdialer__QueueOwnership__c}" />
                                                <input
                                                    id="QueryBuilder:editPage:QueueOwnership"
                                                    name="QueryBuilder:editPage:QueueOwnership"
                                                    maxlength="255"
                                                    size="20"
                                                    readonly="true"
                                                    type="text"
                                                    value="{!QueueName}"
                                                    />
                                                <input
                                                    id="QueryBuilder:editPage:QueueOwnership_lkold"
                                                    name="QueryBuilder:editPage:QueueOwnership_lkold"
                                                    type="hidden"
                                                    value="{!qbdialer__DialerQuery__c.qbdialer__QueueOwnership__c}"
                                                    />
                                                <a
                                                    href="#"
                                                    onclick="openLookup('/_ui/common/data/LookupPage?lkfm=QueryBuilder:editPage&lknm=QueryBuilder:editPage:QueueOwnership&enableScopes=1&lkrf=&enableScopes=1&lktp=lead_queue&lksrch=' + escapeUTF(getElementByIdCS('QueryBuilder:editPage:QueueOwnership').value), 600); return false;"
                                                    title="Search for Queue (New Window)"><img
                                                         src="/s.gif"
                                                         alt="Search for Queue (New Window)"
                                                         class="lookupIcon"
                                                         onblur="this.className = 'lookupIcon';"
                                                         onfocus="this.className = 'lookupIconOn';"
                                                         onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';"
                                                         onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';"
                                                         title="Search for Queue (New Window)"
                                                         /></a>
                                                (applies to Leads only)
                                            </td>
                                        </tr>
                                    </tbody></table>
                                </td>
                                <td nowrap="nowrap" width="25%" id="{!$Component.QueryBuilder.editPage}:filter_by_campaign" style="display:{!IF(ShowCampaigns,'','none')};">
                                    <strong>Filter By Campaign (Optional):</strong>
                                    <table><tbody>
                                        <tr>
                                            <td class="labelCol"><label for="fentityvalue2">Campaign Name:</label></td>
                                            <td class="dataCol">
                                                <apex:inputHidden id="Campaign_lkid" value="{!qbdialer__DialerQuery__c.qbdialer__CampaignId__c}"/>
                                                <input readonly="true" id="QueryBuilder:editPage:Campaign" name="QueryBuilder:editPage:Campaign" maxlength="255" size="20" type="text" value="{!CampaignName}" onchange="if (arguments[0] != 1) {setTemporaryName();updateTempCampaign(document.getElementById('{!$Component.QueryBuilder.editPage.Campaign_lkid}').value);} if(this.value=='') document.getElementById('QueryBuilder:editPage:Campaign_lkid').value = ''" onblur="this.onchange(1,3)" />
                                                <input id="QueryBuilder:editPage:Campaign_lkold" name="QueryBuilder:editPage:Campaign_lkold" type="hidden" value="{!qbdialer__DialerQuery__c.qbdialer__CampaignId__c}" />
                                                <a href="#" onclick="openLookup('/_ui/common/data/LookupPage?lkfm=QueryBuilder:editPage&lknm=QueryBuilder:editPage:Campaign&enableScopes=1&lkrf=&enableScopes=1&lktp=701&lksrch=' + escapeUTF(getElementByIdCS('QueryBuilder:editPage:Campaign').value), 600); setLastMousePosition(event); return false;" id="fentityvalue2_lkwgt" title="Campaign Name Lookup (New Window)"><img src="/s.gif" alt="Campaign Name Lookup (New Window)"  class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Campaign Name Lookup (New Window)"/></a>

                                                <input class="btn" title="Clear" onclick="clearCampaign()" value="Clear" type="button" name="clear_campaign"/>

                                            </td>
                                        </tr>
                                    </tbody></table>
                                    <table><tbody>
                                        <tr>
                                            <td class="labelCol"><label for="fentityvalue2">Campaign Member Status</label></td>
                                            <td class="dataCol">
                                            <apex:outputPanel id="campaign_members_status_panel">
                                            <apex:selectList id="campaign_member_status" size="1" title="Campaign Member Status" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__CampaignMemberStatus__c}">
                                                <apex:selectOptions value="{!CampaignMemberStatuses}"/>
                                            </apex:selectList>
                                            </apex:outputPanel>
                                            <apex:actionfunction name="updateTempCampaign" id="updateTempCampaign"  action="{!updateTempCampaign}" rerender="campaign_members_status_panel" oncomplete="unsetTemporaryName()">
                                                <apex:param name="firstParam" assignTo="{!temp_campaign}" value="" />
                                            </apex:actionfunction>
                                            <apex:actionfunction name="setEmailFolderType" id="setEmailFolderType"  action="{!updateEmailFolderType}" rerender="available_emails,selected_emails" oncomplete="unsetTemporaryName();initEmailFolders();">
                                                <apex:param name="use_salesforce_templates" value="" />
                                            </apex:actionfunction>

                                            </td>
                                        </tr>
                                    </tbody></table>
                                </td>
                            </tr>
                        </tbody></table>
                        <br /><br />
                        <strong>Filter Fields:</strong>
                        <table><tbody>
                            <tr>
                                <th scope="col">&nbsp;</th>
                                <th scope="col">Object</th>
                                <th scope="col">Field</th>
                                <th scope="col">Operator</th>
                                <th scope="col">Value</th>
                            </tr>
                            <tr id="frow1">
                                <td><span style="{!IF(ShowAdvancedOptions,"","display:none;")}" id="f1" class="textBox">1.</span></td>
                                <td>
                                    <apex:selectList size="1" onchange="setFilterObjectType(1)" value="{!FilterObject1}" id="fobj1">
                                        <apex:selectOptions value="{!FilterObjectOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" onchange="updateOperator(1);resetValue(1)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_1__c}" id="fcol1">
                                        <apex:selectOptions value="{!ObjectFieldOptions1}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fop1" title="Operator 1" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_1__c}">
                                        <apex:selectOptions value="{!FilterOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td><apex:inputField id="fval1" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_1__c}"/></td>
                                <td>
                                    <apex:outputPanel style="display:none" id="flkp1" layout="inline">
                                        <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(1); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                    </apex:outputPanel>
                                    <apex:outputPanel id="value_picker" layout="block" style="display:none;width:450px;height:350px;overflow:auto;position:absolute;border:1px solid black;background-color: #efefef;">
                                        <div class="lookup">
                                            <div class="bPageTitle">
                                                <div class="ptBody secondaryPalette">
                                                    <div class="content"><img class="pageTitleIcon" title="" alt="" src="/s.gif"/><h1>Lookup</h1></div>
                                                </div>
                                            </div>
                                            <div class="pbBody"><h2>Select the picklist values to add below.</h2></div>
                                            <div class="topButton">
                                                <input class="btn" title="Insert Selected" onclick="insertSelected();" value="Insert Selected" type="button" name="Done" />
                                                <input class="btn" title="Cancel" onclick="document.getElementById('QueryBuilder:editPage:value_picker').style.display='none';" value="Cancel" type="button" name="Cancel" />
                                            </div>
                                            <div class="listRelatedObject lookupBlock">
                                                <div class="bPageBlock secondaryPalette">
                                                    <div class="pbHeader"></div>
                                                    <div class="pbBody">
                                                        <table class="list" border="0" cellSpacing="0" cellPadding="0">
                                                            <tr class="headerRow">
                                                                <th class="actionColumn" scope="col">&nbsp;</th>
                                                                <th scope="col">Value</th>
                                                            </tr>
                                                            <tbody id="{!$Component.QueryBuilder.editPage}:date_values" style="display:none">
                                                                <tr class="dataRow">
                                                                    <td class="actionColumn" colspan="2">
                                                                        <select id="{!$Component.QueryBuilder.editPage}:date_value">
                                                                            <option value="YESTERDAY">YESTERDAY</option>
                                                                            <option value="TODAY">TODAY</option>
                                                                            <option value="TOMORROW">TOMORROW</option>
                                                                            <option value="LAST WEEK">LAST WEEK</option>
                                                                            <option value="THIS WEEK">THIS WEEK</option>
                                                                            <option value="NEXT WEEK">NEXT WEEK</option>
                                                                            <option value="LAST MONTH">LAST MONTH</option>
                                                                            <option value="THIS MONTH">THIS MONTH</option>
                                                                            <option value="NEXT MONTH">NEXT MONTH</option>
                                                                            <option value="LAST 90 DAYS">LAST 90 DAYS</option>
                                                                            <option value="NEXT 90 DAYS">NEXT 90 DAYS</option>
                                                                            <option value="LAST n DAYS">LAST n DAYS (replace n with desired number)</option>
                                                                            <option value="NEXT n DAYS">NEXT n DAYS (replace n with desired number)</option>
                                                                            <option value="LAST QUARTER">LAST QUARTER</option>
                                                                            <option value="THIS QUARTER">THIS QUARTER</option>
                                                                            <option value="NEXT QUARTER">NEXT QUARTER</option>
                                                                            <option value="LAST n QUARTERS">LAST n QUARTERS (replace n with desired number)</option>
                                                                            <option value="NEXT n QUARTERS">NEXT n QUARTERS (replace n with desired number)</option>
                                                                            <option value="LAST YEAR">LAST YEAR</option>
                                                                            <option value="THIS YEAR">THIS YEAR</option>
                                                                            <option value="NEXT YEAR">NEXT YEAR</option>
                                                                            <option value="LAST n YEARS">LAST n YEARS (replace n with desired number)</option>
                                                                            <option value="NEXT n YEARS">NEXT n YEARS (replace n with desired number)</option>
                                                                            <option value="LAST FISCAL QUARTER">LAST FISCAL QUARTER</option>
                                                                            <option value="THIS FISCAL QUARTER">THIS FISCAL QUARTER</option>
                                                                            <option value="NEXT FISCAL QUARTER">NEXT FISCAL QUARTER</option>
                                                                            <option value="LAST n FISCAL QUARTERS">LAST n FISCAL QUARTERS (replace n with desired number)</option>
                                                                            <option value="NEXT n FISCAL QUARTERS">NEXT n FISCAL QUARTERS (replace n with desired number)</option>
                                                                            <option value="LAST FISCAL YEAR">LAST FISCAL YEAR</option>
                                                                            <option value="THIS FISCAL YEAR">THIS FISCAL YEAR</option>
                                                                            <option value="NEXT FISCAL YEAR">NEXT FISCAL YEAR</option>
                                                                            <option value="LAST n FISCAL YEARS">LAST n FISCAL YEARS (replace n with desired number)</option>
                                                                            <option value="NEXT n FISCAL YEARS">NEXT n FISCAL YEARS (replace n with desired number)</option>
                                                                        </select>
                                                                    </td>
                                                                </tr>
                                                            </tbody>
                                                            <tbody id="QueryBuilder:editPage:boolean_values" style="display:none">
                                                                <tr class="dataRow">
                                                                    <td class="actionColumn"><input id="{!$Component.QueryBuilder.editPage}:chkbox0" value="True" type="radio" name="chkbox"/></td>
                                                                    <td><label for="chkbox0">True</label></td>
                                                                </tr>
                                                                <tr class="dataRow">
                                                                    <td class="actionColumn"><input id="{!$Component.QueryBuilder.editPage}:chkbox1" value="False" type="radio" name="chkbox"/></td>
                                                                    <td><label for="chkbox1">False</label></td>
                                                                </tr>
                                                            </tbody>
                                                            <tbody id="{!$Component.QueryBuilder.editPage}:picklist_values" style="display:none">
                                                                <tr><td nowrap="nowrap" colspan="2">
                                                                    <div style='width:100%;height: 150px; overflow:auto'>
                                                                        <apex:selectCheckboxes layout="pageDirection" style="width:100%" id="picklist_options">
                                                                            <apex:selectOptions value="{!PicklistOptions}"/>
                                                                        </apex:selectCheckboxes>
                                                                    </div>
                                                                </td></tr>
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                    <div class="pbFooter secondaryPalette"><div class="bg"></div></div>
                                                </div>
                                            </div>
                                            <div class="listElementBottomNav"></div>
                                            <!-- End ListElement -->
                                            <div class="bottomButton">
                                                <input class="btn" title="Insert Selected" onclick="insertSelected();" value="Insert Selected" type="button" name="Done" />
                                                <input class="btn" title="Cancel" onclick="document.getElementById('QueryBuilder:editPage:value_picker').style.display='none';" value="Cancel" type="button" name="Cancel" />
                                            </div>
                                        </div>
                                    </apex:outputPanel>
                                    <img id="QueryBuilder:editPage:loading" src="/img/loading.gif" style="position:absolute;background-color:#F3F3EC;border:1px dashed #5E5E5E;padding:20px 90px 20px 90px;display:none;" />
                                </td>
                                <td><span style="visibility:{!IF(ShowAdvancedOptions,"hidden","visible")};" id="and1" class="textBox">AND</span></td>
                            </tr>
                            <tr id="frow2">
                                <td><span style="{!IF(ShowAdvancedOptions,"","display:none;")}" id="f2" class="textBox">2.</span></td>
                                <td>
                                    <apex:selectList size="1" onchange="setFilterObjectType(2)" value="{!FilterObject2}" id="fobj2">
                                        <apex:selectOptions value="{!FilterObjectOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fcol2" onchange="updateOperator(2);resetValue(2)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_2__c}">
                                        <apex:selectOptions value="{!ObjectFieldOptions2}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fop2" title="Operator 2" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_2__c}">
                                        <apex:selectOptions value="{!FilterOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td><apex:inputField id="fval2" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_2__c}"/></td>
                                <td>
                                    <apex:outputPanel style="display:none" id="flkp2" layout="inline">
                                        <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(2); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                    </apex:outputPanel>
                                </td>
                                <td><span style="visibility:{!IF(ShowAdvancedOptions,"hidden","visible")};" id="and2" class="textBox">AND</span></td>
                            </tr>
                            <tr id="frow3">
                                <td><span style="{!IF(ShowAdvancedOptions,"","display:none;")}" id="f3" class="textBox">3.</span></td>
                                <td>
                                    <apex:selectList size="1" onchange="setFilterObjectType(3)" value="{!FilterObject3}" id="fobj3">
                                        <apex:selectOptions value="{!FilterObjectOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fcol3" onchange="updateOperator(3);resetValue(3)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_3__c}">
                                        <apex:selectOptions value="{!ObjectFieldOptions3}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fop3" title="Operator 3" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_3__c}">
                                        <apex:selectOptions value="{!FilterOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td><apex:inputField id="fval3" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_3__c}"/></td>
                                <td>
                                    <apex:outputPanel style="display:none" id="flkp3" layout="inline">
                                        <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(3); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                    </apex:outputPanel>
                                </td>
                                <td><span style="visibility:{!IF(ShowAdvancedOptions,"hidden","visible")};" id="and3" class="textBox">AND</span></td>
                            </tr>
                            <tr id="frow4">
                                <td><span style="{!IF(ShowAdvancedOptions,"","display:none;")}" id="f4" class="textBox">4.</span></td>
                                <td>
                                    <apex:selectList size="1" onchange="setFilterObjectType(4)" value="{!FilterObject4}" id="fobj4">
                                        <apex:selectOptions value="{!FilterObjectOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fcol4" onchange="updateOperator(4);resetValue(4)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_4__c}">
                                        <apex:selectOptions value="{!ObjectFieldOptions4}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fop4" title="Operator 4" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_4__c}">
                                        <apex:selectOptions value="{!FilterOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td><apex:inputField id="fval4" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_4__c}"/></td>
                                <td>
                                    <apex:outputPanel style="display:none" id="flkp4" layout="inline">
                                        <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(4); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                    </apex:outputPanel>
                                </td>
                                <td><span style="visibility:{!IF(ShowAdvancedOptions,"hidden","visible")};" id="and4" class="textBox">AND</span></td>
                            </tr>
                            <tr id="frow5">
                                <td><span style="{!IF(ShowAdvancedOptions,"","display:none;")}" id="f5" class="textBox">5.</span></td>
                                <td>
                                    <apex:selectList size="1" onchange="setFilterObjectType(5)" value="{!FilterObject5}" id="fobj5">
                                        <apex:selectOptions value="{!FilterObjectOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fcol5" onchange="updateOperator(5);resetValue(5)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_5__c}">
                                        <apex:selectOptions value="{!ObjectFieldOptions5}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fop5" title="Operator 5" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_5__c}">
                                        <apex:selectOptions value="{!FilterOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td><apex:inputField id="fval5" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_5__c}"/></td>
                                <td>
                                    <apex:outputPanel style="display:none" id="flkp5" layout="inline">
                                        <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(5); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                    </apex:outputPanel>
                                </td>
                                <td><span style="" id="and5" class="textBox">&nbsp;</span></td>
                            </tr>
                            <tr id="frow6" style="display:{!IF(FilterCount < 6,"none","")}">
                                <td><span id="f6" class="textBox">6.</span></td>
                                <td>
                                    <apex:selectList size="1" onchange="setFilterObjectType(6)" value="{!FilterObject6}" id="fobj6">
                                        <apex:selectOptions value="{!FilterObjectOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fcol6" onchange="updateOperator(6);resetValue(6)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_6__c}">
                                        <apex:selectOptions value="{!ObjectFieldOptions6}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fop6" title="Operator 6" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_6__c}">
                                        <apex:selectOptions value="{!FilterOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td><apex:inputField id="fval6" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_6__c}"/></td>
                                <td>
                                    <apex:outputPanel style="display:none" id="flkp6" layout="inline">
                                        <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(6); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                    </apex:outputPanel>
                                </td>
                                <td><span style="" id="and6" class="textBox">&nbsp;</span></td>
                            </tr>
                            <tr id="frow7" style="display:{!IF(FilterCount < 7,"none","")}">
                                <td><span id="f7" class="textBox">7.</span></td>
                                <td>
                                    <apex:selectList size="1" onchange="setFilterObjectType(7)" value="{!FilterObject7}" id="fobj7">
                                        <apex:selectOptions value="{!FilterObjectOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fcol7" onchange="updateOperator(7);resetValue(7)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_7__c}">
                                        <apex:selectOptions value="{!ObjectFieldOptions7}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fop7" title="Operator 7" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_7__c}">
                                        <apex:selectOptions value="{!FilterOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td><apex:inputField id="fval7" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_7__c}"/></td>
                                <td>
                                    <apex:outputPanel style="display:none" id="flkp7" layout="inline">
                                        <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(7); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                    </apex:outputPanel>
                                </td>
                                <td><span style="" id="and7" class="textBox">&nbsp;</span></td>
                            </tr>
                            <tr id="frow8" style="display:{!IF(FilterCount < 8,"none","")}">
                                <td><span id="f8" class="textBox">8.</span></td>
                                <td>
                                    <apex:selectList size="1" onchange="setFilterObjectType(8)" value="{!FilterObject8}" id="fobj8">
                                        <apex:selectOptions value="{!FilterObjectOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fcol8" onchange="updateOperator(8);resetValue(8)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_8__c}">
                                        <apex:selectOptions value="{!ObjectFieldOptions8}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fop8" title="Operator 8" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_8__c}">
                                        <apex:selectOptions value="{!FilterOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td><apex:inputField id="fval8" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_8__c}"/></td>
                                <td>
                                    <apex:outputPanel style="display:none" id="flkp8" layout="inline">
                                        <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(8); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                    </apex:outputPanel>
                                </td>
                                <td><span style="" id="and8" class="textBox">&nbsp;</span></td>
                            </tr>
                            <tr id="frow9" style="display:{!IF(FilterCount < 9,"none","")}">
                                <td><span id="f9" class="textBox">9.</span></td>
                                <td>
                                    <apex:selectList size="1" onchange="setFilterObjectType(9)" value="{!FilterObject9}" id="fobj9">
                                        <apex:selectOptions value="{!FilterObjectOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fcol9" onchange="updateOperator(9);resetValue(9)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_9__c}">
                                        <apex:selectOptions value="{!ObjectFieldOptions9}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fop9" title="Operator 9" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_9__c}">
                                        <apex:selectOptions value="{!FilterOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td><apex:inputField id="fval9" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_9__c}"/></td>
                                <td>
                                    <apex:outputPanel style="display:none" id="flkp9" layout="inline">
                                        <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(9); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                    </apex:outputPanel>
                                </td>
                                <td><span style="" id="and9" class="textBox">&nbsp;</span></td>
                            </tr>
                            <tr id="frow10" style="display:{!IF(FilterCount < 10,"none","")}">
                                <td><span id="f10" class="textBox">10.</span></td>
                                <td>
                                    <apex:selectList size="1" onchange="setFilterObjectType(10)" value="{!FilterObject10}" id="fobj10">
                                        <apex:selectOptions value="{!FilterObjectOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fcol10" onchange="updateOperator(10);resetValue(10)" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Field_10__c}">
                                        <apex:selectOptions value="{!ObjectFieldOptions10}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="fop10" title="Operator 10" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Op_10__c}">
                                        <apex:selectOptions value="{!FilterOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td><apex:inputField id="fval10" value="{!qbdialer__DialerQuery__c.qbdialer__Filter_Data_10__c}"/></td>
                                <td>
                                    <apex:outputPanel style="display:none" id="flkp10" layout="inline">
                                        <a title="Lookup (New Window)" href="#" onclick="showFieldOptions(10); return false;"><img onblur="this.className = 'lookupIcon';" class="lookupIcon" onfocus="this.className = 'lookupIconOn';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Lookup (New Window)" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" alt="Lookup (New Window)" src="/s.gif"/></a>
                                    </apex:outputPanel>
                                </td>
                                <td><span style="" id="and10" class="textBox">&nbsp;</span></td>
                            </tr>
                        </tbody></table>
                        <span style="display:{!IF(ShowAdvancedOptions,"","none")};" id="frowButtons" class="addRemoveControl">
                            <a id="fAddRowLink" href="#" onclick="addRow(); return false;" style="">Add Row</a>
                            <span id="fAddRowLinkGreyed" class="greyedLink" style="display: none;">Add Row</span>&nbsp;
                            <a id="fRemoveRowLink" href="#" onclick="removeRow(); return false;" style="display: none;">Remove Row</a>
                            <span id="fRemoveRowLinkGreyed" class="greyedLink" style="">Remove Row</span>
                        </span>
                        <div class="addRemoveControl booleanFilterTopMargin">
                            <a id="bool_filter_toggle" href="#" onclick="toggleBooleanFilter(); return false;">{!IF(ShowAdvancedOptions,"Clear Advanced Options","Advanced Options...")}</a><br />
                            <span style="display: none;" id="bool_filter_span">
                                <label for="bool_filter">Advanced Filter Conditions:</label><br />
                                <apex:inputField id="bool_filter" value="{!qbdialer__DialerQuery__c.qbdialer__AdvancedFilter__c}" style="width:600px"/>
                                <a title="Tips (New Window)" class="tipsLink" href="#" onclick="openPopupFocusEscapePounds(%27/help/doc/user_ed.jsp?loc=help%26target=working_with_advanced_filter_conditions_in_reports_and_list_views.htm%26section=Reports%27, %27Help%27, 700, 600, %27width=700,height=600,resizable=yes,toolbar=yes,status=no,scrollbars=yes,menubar=yes,directories=no,location=no,dependant=no%27, false, false); return false;"><span class="helpLink">Tips</span><img title="Help" class="helpIcon" alt="Help" src="/s.gif"/></a><br />
                                <apex:outputPanel id="bool_filter_error" style="display:none;"><div class="errorMsg"><strong>Error:</strong> <span id="bool_filter_error_text">{!SaveError}</span></div></apex:outputPanel>
                                <img height="211" width="533" title="Boolean Filters Help" alt="Boolean Filters Help" src="/img/report_boolean_filter.gif"/><br />
                            </span>
                        </div>
                    </div>
                </div>
                </apex:outputPanel>
                <apex:outputPanel id="sort_criteria_panel">
                <div class="pbSubblock">
                    <div class="pbSubheader tertiaryPalette"><h3>Specify Sort Criteria (Optional)</h3></div>
                    <div class="pbSubbody">
                        <p id="neuralytics_sort_message" style="display:none">
                            Sorting criteria has been disabled because Neural Sorting has been enabled.
                            See your settings to adjust this feature.
                        </p>
                        <table><tbody>
                            <tr>
                                <th scope="col">&nbsp;</th>
                                <th scope="col">Field</th>
                                <th scope="col">Direction</th>
                            </tr>
                            <tr id="srow1">
                                <td>1.</td>
                                <td>
                                    <apex:selectList size="1" value="{!qbdialer__DialerQuery__c.qbdialer__Sort_Field_1__c}" id="scol1">
                                        <apex:selectOptions value="{!ObjectFieldOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="sort1" title="Sort Direction 1" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Sort_Direction_1__c}">
                                        <apex:selectOption itemLabel="--None--" itemValue=""/>
                                        <apex:selectOption itemLabel="ASC" itemValue="ASC"/>
                                        <apex:selectOption itemLabel="DESC" itemValue="DESC"/>
                                    </apex:selectList>
                                </td>
                                <td>AND</td>
                            </tr>
                            <tr id="srow2">
                                <td>2.</td>
                                <td>
                                    <apex:selectList size="1" value="{!qbdialer__DialerQuery__c.qbdialer__Sort_Field_2__c}" id="scol2">
                                        <apex:selectOptions value="{!ObjectFieldOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="sort2" title="Sort Direction 2" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Sort_Direction_2__c}">
                                        <apex:selectOption itemLabel="--None--" itemValue=""/>
                                        <apex:selectOption itemLabel="ASC" itemValue="ASC"/>
                                        <apex:selectOption itemLabel="DESC" itemValue="DESC"/>
                                    </apex:selectList>
                                </td>
                                <td>AND</td>
                            </tr>
                            <tr id="srow3">
                                <td>3.</td>
                                <td>
                                    <apex:selectList size="1" value="{!qbdialer__DialerQuery__c.qbdialer__Sort_Field_3__c}" id="scol3">
                                        <apex:selectOptions value="{!ObjectFieldOptions}"/>
                                    </apex:selectList>
                                </td>
                                <td>
                                    <apex:selectList size="1" id="sort3" title="Sort Direction 3" style="width:123px" value="{!qbdialer__DialerQuery__c.qbdialer__Sort_Direction_3__c}">
                                        <apex:selectOption itemLabel="--None--" itemValue=""/>
                                        <apex:selectOption itemLabel="ASC" itemValue="ASC"/>
                                        <apex:selectOption itemLabel="DESC" itemValue="DESC"/>
                                    </apex:selectList>
                                </td>
                            </tr>
                        </tbody></table>
                    </div>
                </div>
                </apex:outputPanel>
                <apex:outputPanel id="default_comm_panel" rendered="{!IsDominoQuery}">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Default Communications Templates</h3></div>
                        <div class="pbSubbody">
                            <table border="0" cellSpacing="0" cellPadding="0"><tbody>
                                <tr>
                                    <td class="labelCol requiredInput"><label>Script:</label></td>
                                    <td class="dataCol">
                                        <div>
                                            <apex:selectList id="default_script_id" size="1" title="Script" value="{!DefaultDialerScript}">
                                                <apex:selectOptions value="{!DialerScriptOptions}"/>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!IsDominoQuery}">
                <div class="pbSubblock">
                    <div class="pbSubheader tertiaryPalette"><h3>Assign Users</h3></div>
                    <div class="pbSubbody">
                        <strong>Which users can see this list:</strong>
                        <apex:selectRadio id="fshare" layout="pageDirection" value="{!qbdialer__DialerQuery__c.qbdialer__Attendees__c}" onclick="document.getElementById('duel').style.display = (document.getElementById('QueryBuilder:editPage:fshare:2').checked?'block':'none');">
                            <apex:selectOption id="fsharefsharenone"   onclick="document.getElementById('duel').style.display = 'none';" itemValue="fsharenone"   itemLabel="Visible only to me"/>
                            <apex:selectOption id="fsharefshareall"    onclick="document.getElementById('duel').style.display = 'none';" itemValue="fshareall"    itemLabel="Visible to all users"/>
                            <apex:selectOption id="fsharefsharegroups" onclick="document.getElementById('duel').style.display = 'block';"  itemValue="fsharegroups" itemLabel="Visible to certain groups of users"/>
                        </apex:selectRadio>
                        <br />
                        <div style="display: block" id="duel" class="duelingListBox">
                            <div style="display: none" id="editPage_duel_errorMsg" class="errorMsg">&nbsp;</div>
                            <div>
                                <label for="sharing_search">Search:</label>&nbsp;
                                <select id="sharing_search" title="Group Type" onchange="duel_select_0Var.filter()" name="sharing_search">
                                    <!--  <OPTION value="R">Public Groups</OPTION> -->
                                    <option selected="selected" value="A">Roles</option>
                                    <option value="D">Roles and Subordinates</option>
                                    <option value="U">Specific Users</option>
                                </select>
                                &nbsp;&nbsp;
                                <label for="searchValue_sharing_search">for:</label>&nbsp;
                                <input onkeydown="return duel_select_0Var.handleKeyDown(event);" onpropertychange="duel_select_0Var.handlePropertyChange();" id="searchValue_sharing_search" maxLength="80" name="searchValue_sharing_search"/>
                                &nbsp;
                                <input id="go_duel_select_0Var" class="btn" title="Find" onclick="duel_select_0Var.doSearch();" value=" Find " type="button" name="go_duel_select_0"/>
                                <br />
                                <div style="visibility: hidden" id="error_QueryBuilder:editPage:duel_select_0" class="errorMsg"></div>
                            </div>
                            <table class="layout"><tbody>
                                <tr>
                                    <td class="selectCell">
                                        <div class="selectTitle"><label for="duel_select_0">Available</label></div>
                                        <select id="QueryBuilder:editPage:duel_select_0" size="14" multiple="true">
                                            <option value="">--None--</option>
                                        </select>
                                    </td>
                                    <td class="buttonCell">
                                        <div class="text">Add</div>
                                        <script type="text/javascript">
                                            function moveRight(){
                                                var src_dd = document.getElementById('QueryBuilder:editPage:duel_select_1');
                                                var dst_dd = document.getElementById('QueryBuilder:editPage:duel_select_0');
                                                if (!src_dd.disabled && !dst_dd.disabled)
                                                {
                                                    duel_select_0Var.beforeMoveRight();
                                                    window.editPage_DLBEInstance.instMoveOption(dst_dd, src_dd,'--None--', [], null,'--None--',false,null,'editPage_duel_errorMsg');
                                                }
                                            }

                                            function moveLeft(){
                                                var src_dd = document.getElementById('QueryBuilder:editPage:duel_select_0');
                                                var dst_dd = document.getElementById('QueryBuilder:editPage:duel_select_1');
                                                if (!src_dd.disabled && !dst_dd.disabled) {
                                                    window.editPage_DLBEInstance.instMoveOption(dst_dd, src_dd,'--None--', [], null,'--None--',false,null,'editPage_duel_errorMsg');duel_select_0Var.moveLeft();
                                                }
                                            }
                                        </script>
                                        <div class="text"><a id="duel_select_0_right" href="#" onclick="moveRight(); return false;"><img class="rightArrowIcon" title="Add" alt="Add" src="/s.gif"/></a></div>
                                        <div class="text"><a id="duel_select_0_left" href="#" onclick="moveLeft(); return false;"><img class="leftArrowIcon" title="Remove" alt="Remove" src="/s.gif"/></a></div>
                                        <div class="duelingText">Remove</div>
                                    </td>
                                    <td class="selectCell">
                                        <div class="selectTitle"><label for="duel_select_1">Selected</label></div>
                                        <select id="QueryBuilder:editPage:duel_select_1" size="14" multiple="true">
                                            <option value="">--None--</option>
                                        </select>
                                    </td>
                                </tr>
                            </tbody></table>
                            <script type="text/javascript">
                                var duel_select_0Var = new SelectFilterElement('sharing_search', 'R', 'QueryBuilder:editPage:duel_select_0', '', 'QueryBuilder:editPage:duel_select_1', 100, true);
                                var existingSelduel_select_1 = document.getElementById('QueryBuilder:editPage:duel_select_1');
                                var existingSelduel_select_0 = document.getElementById('QueryBuilder:editPage:duel_select_0');
                                window.editPage_DLBEInstance=new DuelingListBoxesElement(['QueryBuilder:editPage:duel_select_0','QueryBuilder:editPage:duel_select_1'],'editPage_duel_errorMsg');
                                document.getElementById('duel').style.display = 'none';
                            </script>
                        </div>
                    </div>
                </div>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!IsDominoQuery}">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Caller Id</h3></div>
                        <div class="pbSubbody">
                            <strong>Caller Id that the customer will see:</strong>
                            &nbsp;&nbsp;
                            <apex:inputField id="caller_id" value="{!qbdialer__DialerQuery__c.qbdialer__Caller_Id__c}"/>
                            <br />
                            (Defaults to the Company's phone number.&nbsp;&nbsp;If there is no Company phone set, it defaults to the agents phone number.)
                            <br />
                        </div>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!IsDominoQuery}">
                    <div class="pbSubblock">
                        <div class="pbSubheader tertiaryPalette"><h3>Callbacks</h3></div>
                        <div class="pbSubbody">
                            <table border="0" cellSpacing="0" cellPadding="0" width="50%"><tbody>
                                <tr><td nowrap="nowrap">
                                    <strong>Receiving Callbacks:</strong><br />
                                    <apex:inputCheckbox value="{!qbdialer__DialerQuery__c.qbdialer__Prevent_callbacks__c}" id="prevent_callbacks" />
                                    <label for="QueryBuilder:editPage:prevent_callbacks">Prevent users from receiving callbacks while dialing in this list</label>
                                    <br />
                                    <br />
                                </td></tr>
                                <tr><td nowrap="nowrap">
                                    <strong>Who can call back:</strong><br />
                                    <apex:selectRadio id="call_backs" layout="pageDirection" value="{!qbdialer__DialerQuery__c.qbdialer__Callback_action__c}" onclick="showCallBackGracePeriod();">
                                        <apex:selectOption id="cb_owner" itemValue="owner" itemLabel="Only the owner of the callback"/>
                                        <apex:selectOption id="cb_list" itemValue="list" itemLabel="All attendees of this list"/>
                                        <apex:selectOption id="cb_all" itemValue="all" itemLabel="All users"/>
                                    </apex:selectRadio>
                                </td></tr>
                                <!--
                                <tr id="call_back_grace_period"><td>
                                    <strong>Grace period in minutes until another user can callback:</strong>&nbsp;
                                    <apex:inputField id="call_back_grace_period" value="{!DialerQuery__c.Callback_grace_period__c}"/>
                                </td></tr>
                                 -->
                            </tbody></table>
                        </div>
                    </div>
                </apex:outputPanel>
                <br />
                <div class="pbBottomButtons">
                    <table><tbody>
                        <tr><td class="pbTitle" align="center"><div id="savestatus_mirror"></div></td></tr>
                        <tr>
                            <td class="pbButtonb" align="center">
                                <apex:outputPanel rendered="{!IsDominoQuery}">
                                    <apex:commandButton value=" Save " id="save2"        onclick="return saveClick(true);" title=" Save "/>
                                    <apex:commandButton value=" Quick Save " id="savequick2"  onclick="return saveClickQuick(true);"  title=" Quick Save " rendered="{!IsQuickSaveable}"/>
                                    <apex:commandButton value=" View Query Results " id="saveview2" onclick="return saveClickView();" title=" View Query Results " rerender="pageMsgs" rendered="{!IsQuickSaveable}"/>
                                    <apex:commandButton value=" Cancel "      action="{!DialerQueryCancel}"                                     title=" Cancel "     immediate="true"/>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IsSeekQuery}">
                                    <apex:commandButton value=" Save & Close " id="save_s2"       onclick="return saveClick(false);"                title=" Save & Close "       rerender="pageMsgs"/>
                                    <apex:commandButton value=" Quick Save " id="savequick_s2"         onclick="return saveClickQuick(false);"                 title=" Quick Save "         rerender="pageMsgs" rendered="{!IsQuickSaveable}"/>
                                    <apex:commandButton value=" View Query Results " id="saveview_s2" onclick="return saveClickView();" title=" View Query Results " rerender="pageMsgs" rendered="{!IsQuickSaveable}"/>
                                    <apex:commandButton value=" Cancel "             onclick="top.window.close();return false;"                       title=" Cancel "/>
                                </apex:outputPanel>
                            </td>
                        </tr>
                    </tbody></table>
                </div>
            </div>
        </apex:form>
        <apex:form >
            <apex:actionFunction id="updatePicklistOptions" name="updatePicklistOptions" action="{!updateSelectedField}" rerender="picklist_options" oncomplete="showPickListOptions()">
                <apex:param name="selected_field" assignTo="{!selected_field}" value=""/>
            </apex:actionFunction>
        </apex:form>
        <div class="pbFooter secondaryPalette"><div class="bg">&nbsp;</div></div>
        <script type="text/javascript">
            function showCallBackGracePeriod() {
            /*
                if(document.getElementById('QueryBuilder:editPage:call_backs:0').checked)
                    document.getElementById("call_back_grace_period").style.display = "none";
                else
                    document.getElementById("call_back_grace_period").style.display = "block";
            */
            }
            updateDataSourceDisplay('{!JSENCODE(DialerQuery__c.DataSource__c)}');


            setTimeout(postRowProcess, 1000);

        </script>
    </div>
</apex:page>